{
  "animation_name": "Blurred Bottom Bar",
  "animation_slug": "blurred-bottom-bar",
  "description": "A glassmorphic bottom tab bar navigation component featuring blur effects, smooth tab transitions with opacity animations, and floating pill-shaped design. Integrates with React Navigation's bottom tabs to create an iOS-style translucent navigation bar with gradient background and platform-optimized blur intensity.",
  "main_features": [
    "Glassmorphic blur effect with platform-specific intensity",
    "Floating pill-shaped tab bar with rounded corners",
    "Smooth tab opacity transitions (fade inactive tabs)",
    "Linear gradient background for depth perception",
    "Integration with React Navigation bottom tabs",
    "Dynamic icon rendering based on screen names",
    "Pressable scale interactions on tab items",
    "Safe area insets support for notched devices",
    "Continuous border curve (iOS squircle)",
    "Multiple screen navigation with freezeOnBlur optimization"
  ],
  "file_structure": {
    "index.tsx": "Main demo app with bottom tab navigator and image screens",
    "components/bottom-tab-bar.tsx": "Custom tab bar component with blur and gradient effects",
    "components/tab-bar-item.tsx": "Individual tab item with icon and opacity animation",
    "constants/screens.ts": "Screen names configuration",
    "assets/01.jpg": "Demo image for Home screen",
    "assets/02.jpg": "Demo image for Explore screen",
    "assets/03.jpg": "Demo image for Camera screen"
  },
  "core_technologies": {
    "navigation": "@react-navigation/bottom-tabs",
    "animations": "react-native-reanimated",
    "interactions": "pressto",
    "blur": "expo-blur",
    "gradient": "expo-linear-gradient",
    "layout": "react-native-safe-area-context",
    "icons": "@expo/vector-icons"
  },
  "packages_and_versions": {
    "@react-navigation/bottom-tabs": {
      "version": "^7.4.0",
      "components": [
        "createBottomTabNavigator"
      ],
      "types": [
        "BottomTabBarProps"
      ],
      "usage": "Core bottom tab navigation structure"
    },
    "@react-navigation/native": {
      "version": "^7.1.8",
      "imports": [
        "StackActions"
      ],
      "usage": "Navigation actions for popping stacks"
    },
    "react-native-reanimated": {
      "version": "~4.1.1",
      "hooks": [
        "useSharedValue",
        "useAnimatedStyle",
        "useDerivedValue",
        "withTiming"
      ],
      "components": [
        "Animated.View"
      ],
      "critical_feature": "useSharedValue for tracking focused tab index and opacity animations"
    },
    "expo-blur": {
      "version": "~15.0.7",
      "components": [
        "BlurView"
      ],
      "props": [
        "intensity"
      ],
      "usage": "iOS/Android blur effect with platform-specific intensity (20 for Android, 40 for iOS)",
      "effect": "Translucent glassmorphic background"
    },
    "expo-linear-gradient": {
      "version": "~15.0.7",
      "components": [
        "LinearGradient"
      ],
      "usage": "Gradient overlay above content, below tab bar",
      "colors": [
        "transparent → rgba(0,0,0,0.1) → rgba(0,0,0,0.5) → rgba(0,0,0,0.8)"
      ]
    },
    "react-native-safe-area-context": {
      "version": "~5.6.0",
      "hooks": [
        "useSafeAreaInsets"
      ],
      "usage": "Dynamic bottom padding for notched devices (iPhone home indicator)"
    },
    "pressto": {
      "version": "0.3.5-beta.1",
      "component": "PressableScale",
      "usage": "Tab items with spring scale press feedback"
    },
    "@expo/vector-icons": {
      "version": "^15.0.2",
      "components": [
        "MaterialIcons"
      ],
      "icons_used": [
        "home",
        "explore",
        "camera-alt",
        "settings"
      ],
      "usage": "Tab bar icons with 25px size, white color"
    }
  },
  "animation_techniques": {
    "tab_opacity_transition": {
      "pattern": "Opacity interpolation based on focused state",
      "focused_opacity": "withTiming(1)",
      "unfocused_opacity": "withTiming(0.3)",
      "timing": "Default timing (likely ~300ms)",
      "effect": "Active tab fully visible, inactive tabs at 30% opacity",
      "smooth_transition": "withTiming provides smooth fade"
    },
    "focus_tracking": {
      "shared_value": "focusedIndex",
      "initial": "state.index (current route index)",
      "updates": "Set on tab press",
      "derived_usage": "useDerivedValue checks focusedIndex === index",
      "benefit": "Reactive opacity changes without re-renders"
    },
    "icon_scale_feedback": {
      "component": "PressableScale from pressto",
      "effect": "Tab item scales down on press, springs back",
      "spring_config": "Default pressto spring",
      "tactile_feedback": "Visual press confirmation"
    },
    "gradient_fade": {
      "component": "LinearGradient",
      "colors": [
        "rgba(255,255,255,0) - Transparent top",
        "rgba(0,0,0,0.1) - Very light black",
        "rgba(0,0,0,0.5) - Medium black",
        "rgba(0,0,0,0.8) - Strong black bottom"
      ],
      "purpose": "Creates depth, prevents content clash with tab bar",
      "height": "bottomBarSafeHeight (60 + safeBottom + 30)",
      "pointer_events": "none (doesn't block touches)"
    }
  },
  "reanimated_patterns": {
    "shared_values": [
      {
        "name": "focusedIndex",
        "type": "SharedValue<number>",
        "initial": "state.index",
        "updates": "Set to new index on tab press",
        "scope": "BottomTabBar component",
        "purpose": "Track currently active tab for opacity animations"
      }
    ],
    "derived_values": [
      {
        "name": "isFocused",
        "calculation": "focusedIndex.value === index",
        "dependencies": [
          "focusedIndex",
          "index"
        ],
        "type": "boolean",
        "purpose": "Per-tab focus state for opacity calculation",
        "scope": "Each TabBarItem"
      }
    ],
    "useAnimatedStyle_instances": [
      {
        "name": "rStyle",
        "target": "TabBarItem container",
        "properties": [
          "opacity"
        ],
        "interpolation": "withTiming(isFocused ? 1 : 0.3)",
        "effect": "Smooth opacity transition on tab change"
      }
    ],
    "useCallback_optimization": {
      "onTapIcon": {
        "dependencies": [
          "currentIndex",
          "navigation"
        ],
        "purpose": "Handle tab press with navigation and stack popping",
        "memoization": "Prevents TabBarItem re-renders"
      },
      "tabBar": {
        "dependencies": "[]",
        "purpose": "Stable tab bar render function for Navigator",
        "location": "Main App component"
      },
      "getIconByScreenName": {
        "dependencies": "[]",
        "purpose": "Map screen name to MaterialIcons component",
        "memoization": "Prevents icon recreation on every render"
      }
    }
  },
  "navigation_patterns": {
    "bottom_tab_navigator": {
      "library": "@react-navigation/bottom-tabs",
      "screens": [
        "Home",
        "Explore",
        "Camera",
        "Settings"
      ],
      "initialRouteName": "Home",
      "custom_tab_bar": true,
      "screen_options": {
        "headerShown": false,
        "freezeOnBlur": true
      }
    },
    "screen_name_mapping": {
      "pattern": "ScreenNames object maps keys to values",
      "source": "constants/screens.ts",
      "generation": "ScreenNamesArray.reduce() creates typed object",
      "type_safety": "TypeScript ensures correct screen names",
      "purpose": "Type-safe screen name references"
    },
    "custom_tab_bar_rendering": {
      "prop": "tabBar",
      "receives": "BottomTabBarProps (state, navigation)",
      "custom_component": "BottomTabBar",
      "pattern": "useCallback wraps custom tab bar for stable reference"
    },
    "navigation_logic": {
      "on_tap_same_tab": {
        "behavior": "Pop navigation stack to root",
        "check": "currentIndex === selectedIndex",
        "action": "StackActions.pop(popsAmount)",
        "use_case": "Tapping active tab returns to that tab's root screen"
      },
      "on_tap_different_tab": {
        "behavior": "Navigate to new tab",
        "action": "navigation.navigate(nextScreen)",
        "focus_update": "focusedIndex.value = index"
      },
      "nested_navigation": {
        "support": true,
        "pattern": "Checks nested stack index with navigation.getState()",
        "pop_calculation": "routes.find(item => item.name === nextScreen)?.state?.index"
      }
    }
  },
  "component_architecture": {
    "App": {
      "type": "Main component (exported as BlurredBottomBar)",
      "structure": "BottomTab.Navigator with custom tabBar",
      "screens": [
        {
          "name": "Home",
          "component": "Screen1 (ImageScreen with 01.jpg)"
        },
        {
          "name": "Explore",
          "component": "Screen2 (ImageScreen with 02.jpg)"
        },
        {
          "name": "Camera",
          "component": "Screen3 (ImageScreen with 03.jpg)"
        },
        {
          "name": "Settings",
          "component": "Screen4 (ImageScreen with 01.jpg)"
        }
      ]
    },
    "BottomTabBar": {
      "type": "Functional component",
      "props": "BottomTabBarProps (state, navigation)",
      "structure": [
        "LinearGradient (gradient overlay)",
        "View (bottom container with border)",
        "BlurView (glassmorphic background)",
        "TabBarItem components (mapped from ScreenNames)"
      ],
      "constants": [
        "BOTTOM_BAR_HEIGHT: 60px",
        "SCREEN_HEIGHT: Dimensions.get('window').height",
        "IS_SMALL_DEVICE: SCREEN_HEIGHT < 700"
      ]
    },
    "TabBarItem": {
      "type": "Memoized functional component",
      "props": {
        "onPress": "() => void - Tab press callback",
        "focusedIndex": "SharedValue<number> - Current focused tab",
        "index": "number - Tab index",
        "screenName": "string - Screen identifier"
      },
      "structure": [
        "Animated.View (with opacity animation)",
        "PressableScale (with press feedback)",
        "MaterialIcons (screen-specific icon)"
      ],
      "memo": true,
      "optimization": "Prevents re-renders when other tabs change"
    },
    "ImageScreen": {
      "type": "Simple screen component",
      "props": "{ source: ImageSourcePropType }",
      "structure": "View + Image with cover resizeMode",
      "purpose": "Demo screens showing full-screen images"
    }
  },
  "visual_design": {
    "color_scheme": {
      "tab_bar_background": "rgba(255,255,255,0.05) - Very subtle white tint",
      "blur_tint": "Platform-specific (iOS/Android handle differently)",
      "border_color": "rgb(216, 216, 216) - Light gray border",
      "icon_color": "white",
      "gradient": "Transparent to rgba(0,0,0,0.8) - Black gradient",
      "screen_background": "#000 (black)"
    },
    "dimensions": {
      "tab_bar": {
        "height": "60px (BOTTOM_BAR_HEIGHT)",
        "width": "70% of screen (left: 15%, right: 15%)",
        "borderRadius": "30px (pill shape)",
        "borderWidth": "1px",
        "bottom_offset": "safeBottom + 15px (15px margin above safe area)"
      },
      "gradient": {
        "height": "bottomBarSafeHeight (60 + safeBottom + 30)",
        "position": "absolute bottom 0, full width"
      },
      "icons": {
        "size": "25px",
        "color": "white",
        "padding": "15px horizontal in tab bar"
      }
    },
    "blur_effect": {
      "intensity": {
        "ios": 40,
        "android": 20
      },
      "reasoning": "Android blur is stronger per unit, iOS needs higher value",
      "tint": "default (light on iOS, dark on Android typically)",
      "background_color": "rgba(255,255,255,0.05) - Slight white tint for visibility"
    },
    "border_styling": {
      "borderRadius": "30px (half of height for pill shape)",
      "borderCurve": "continuous (iOS squircle)",
      "borderColor": "rgb(216, 216, 216) - Subtle gray",
      "borderWidth": "1px",
      "overflow": "hidden (clips blur to rounded corners)"
    },
    "spacing": {
      "tab_bar_padding": "15px horizontal",
      "bottom_margin": "safeBottom + 15px",
      "gradient_height": "60 + safeBottom + 30px",
      "horizontal_margins": "15% each side (tab bar is 70% width)"
    },
    "layout": {
      "tab_bar_layout": "flexDirection: row, flex: 1 for even spacing",
      "tab_item_layout": "flex: 1, alignItems: center, justifyContent: center",
      "positioning": "Absolute positioning for tab bar and gradient"
    }
  },
  "platform_considerations": {
    "blur_intensity_differences": {
      "ios_value": 40,
      "android_value": 20,
      "reason": "Platform.OS === 'android' ternary in BlurView intensity prop",
      "effect": "Similar visual blur across platforms"
    },
    "safe_area_handling": {
      "hook": "useSafeAreaInsets()",
      "bottom_inset": "Used for tab bar positioning",
      "calculation": "bottom + 15 for tab bar, bottom + 30 for gradient",
      "devices": "Essential for iPhone X+ home indicator, Android gesture navigation"
    },
    "border_curve": {
      "property": "borderCurve: 'continuous'",
      "platform": "iOS only",
      "fallback": "Regular borderRadius on Android",
      "effect": "Squircle shape on iOS (Apple-style smooth corners)"
    },
    "shadow_considerations": {
      "note": "No explicit shadows in current implementation",
      "potential": "Could add iOS shadow or Android elevation for depth"
    }
  },
  "performance_optimizations": {
    "memo_components": {
      "TabBarItem": "memo() prevents re-renders when other tabs pressed",
      "benefit": "Only focused and newly unfocused tabs re-render",
      "critical_for": "Smooth animations, no stuttering on tab switch"
    },
    "useCallback_callbacks": {
      "onTapIcon": "Memoized with [currentIndex, navigation] dependencies",
      "tabBar": "Memoized with no dependencies",
      "getIconByScreenName": "Memoized with no dependencies",
      "benefit": "Stable references prevent child re-renders"
    },
    "shared_values": {
      "pattern": "focusedIndex uses SharedValue, not useState",
      "benefit": "Opacity animations run on UI thread, no bridge crossing",
      "performance": "60fps tab transitions"
    },
    "freeze_on_blur": {
      "screen_option": "freezeOnBlur: true",
      "benefit": "Inactive screens don't re-render or update",
      "use_case": "Saves CPU/battery with inactive screens"
    },
    "pointer_events": {
      "gradient": "pointerEvents='none'",
      "benefit": "Gradient doesn't block touches to content below",
      "critical": "Content remains interactive behind gradient"
    },
    "screen_mapping": {
      "pattern": "screensMap object computed once with reduce()",
      "benefit": "No array iteration on every tab press",
      "optimization": "O(1) lookup instead of O(n) find"
    }
  },
  "layout_and_positioning": {
    "absolute_positioning": {
      "tab_bar": "position: absolute, bottom: safeBottom + 15",
      "gradient": "position: absolute, bottom: 0",
      "layering": "Gradient → Tab bar (tab bar above gradient)"
    },
    "responsive_layout": {
      "tab_bar_width": "70% of screen (left: 15%, right: 15%)",
      "tab_items": "flex: 1 for equal distribution",
      "safe_area": "Dynamic bottom spacing based on device",
      "dimensions": "useWindowDimensions() via Dimensions.get('window')"
    },
    "z_index_strategy": {
      "gradient": "Natural stacking (rendered first)",
      "tab_bar": "Rendered second, appears above gradient",
      "no_explicit_z_index": "Relies on render order"
    }
  },
  "use_cases": {
    "primary": [
      "Bottom tab navigation for mobile apps",
      "iOS-style translucent tab bars",
      "Glassmorphic navigation UI",
      "Media viewing apps with full-screen content",
      "Social media app navigation"
    ],
    "real_world_examples": [
      "Instagram-style bottom navigation",
      "Apple Music tab bar",
      "Photography apps with full-screen images",
      "Video streaming apps",
      "Modern iOS app navigation patterns"
    ],
    "design_patterns": [
      "Glassmorphism / frosted glass UI",
      "Floating navigation elements",
      "Contextual navigation (doesn't block content)",
      "Smooth tab transitions"
    ]
  },
  "code_quality": {
    "typescript": {
      "coverage": "Full TypeScript with explicit types",
      "type_definitions": [
        "BottomTabBarProps (from React Navigation)",
        "FC<TabBarItemProps>",
        "Record<number, keyof typeof ScreenNames>"
      ],
      "type_imports": "type keyword for type-only imports",
      "const_assertions": "'as const' for LINEAR_GRADIENT_COLORS"
    },
    "component_separation": {
      "index.tsx": "Demo app and navigation setup",
      "bottom-tab-bar.tsx": "Core tab bar logic and UI",
      "tab-bar-item.tsx": "Individual tab item component",
      "screens.ts": "Screen name constants and types"
    },
    "constants_extraction": {
      "dimensions": "BOTTOM_BAR_HEIGHT, SCREEN_HEIGHT, IS_SMALL_DEVICE",
      "colors": "LINEAR_GRADIENT_COLORS array",
      "screens": "ScreenNames, ScreenNamesArray from constants file"
    },
    "type_safety": {
      "screen_mapping": "screensMap has typed Record<number, keyof typeof ScreenNames>",
      "props": "Explicit prop types for all components",
      "navigation_state": "Uses React Navigation's typed state and navigation props"
    },
    "best_practices": [
      "Separation of concerns (navigation, UI, data)",
      "Type-safe screen names",
      "Memoized components and callbacks",
      "Constants for magic numbers",
      "Clean component composition"
    ]
  },
  "known_limitations": {
    "small_device_constant": {
      "issue": "IS_SMALL_DEVICE constant defined but not used",
      "defined": "SCREEN_HEIGHT < 700",
      "potential_use": "Could adjust bar height or icon size on small screens",
      "current_state": "Dead code"
    },
    "icon_mapping": {
      "issue": "Icon mapping hardcoded in getIconByScreenName",
      "limitation": "Adding new screens requires code change",
      "improvement": "Could accept icon name as screen option"
    },
    "gradient_colors": {
      "issue": "Gradient colors hardcoded as constant",
      "customization": "Cannot be changed without code modification",
      "improvement": "Could be props or theme-based"
    },
    "blur_intensity": {
      "issue": "Platform-specific intensity values hardcoded",
      "values": "iOS: 40, Android: 20",
      "improvement": "Could be configurable props"
    },
    "accessibility": {
      "missing": "No accessibility labels or roles on tab items",
      "screen_reader": "Tab names not announced",
      "keyboard": "No keyboard navigation support"
    },
    "haptic_feedback": {
      "missing": "No haptic feedback on tab press",
      "improvement": "Could use expo-haptics for tactile feedback"
    }
  },
  "potential_improvements": {
    "interaction_enhancements": [
      "Haptic feedback on tab press (expo-haptics)",
      "Long press for contextual actions",
      "Swipe gestures to switch tabs",
      "Badge notifications on tab icons",
      "Animated icon transitions (morph animations)"
    ],
    "visual_refinements": [
      "Active tab indicator (underline, highlight)",
      "Icon color change on focus (not just opacity)",
      "Shadow/glow on active tab",
      "Animated background pill that follows active tab",
      "Micro-interactions (spring animations on icons)"
    ],
    "customization_options": [
      "Configurable blur intensity via props",
      "Custom gradient colors",
      "Adjustable bar height and width",
      "Icon size configuration",
      "Border styling options (color, width)",
      "Position options (top/bottom/side)"
    ],
    "accessibility": [
      "Accessibility labels for tabs (accessibilityLabel)",
      "Screen reader announcements on tab change",
      "Keyboard navigation support",
      "High contrast mode support",
      "Reduce motion preference (disable opacity animation)"
    ],
    "functionality": [
      "Badge counters on tabs",
      "Custom icon components (not just MaterialIcons)",
      "Tab labels (text below icons)",
      "Floating action button in center",
      "More than 4 tabs with scrollable tab bar"
    ],
    "performance": [
      "Use IS_SMALL_DEVICE for responsive scaling",
      "Lazy load tab screens",
      "Pre-render adjacent tabs for faster switching",
      "Optimize blur performance on low-end devices"
    ]
  },
  "key_insights": {
    "platform_blur_differences": "iOS and Android require different blur intensity values for similar visual effect",
    "shared_value_for_animations": "Using SharedValue for focusedIndex enables UI thread animations without re-renders",
    "pointer_events_critical": "pointerEvents='none' on gradient is essential to keep content interactive",
    "safe_area_essential": "Safe area insets critical for modern devices with home indicators",
    "memo_optimization": "memo() on TabBarItem is critical for smooth tab switching with multiple tabs",
    "navigation_integration": "Custom tab bar seamlessly integrates with React Navigation for nested stacks",
    "continuous_border_curve": "borderCurve: 'continuous' provides Apple-style squircle on iOS",
    "freeze_on_blur": "freezeOnBlur: true is important performance optimization for inactive screens"
  },
  "learning_opportunities": {
    "for_beginners": [
      "React Navigation bottom tabs setup",
      "Custom tab bar implementation",
      "Blur effects with expo-blur",
      "Safe area handling for notched devices",
      "Basic opacity animations"
    ],
    "for_intermediate": [
      "Custom tab bar with BottomTabBarProps",
      "Shared values for UI thread animations",
      "useDerivedValue for computed states",
      "Platform-specific styling (Platform.OS)",
      "Gradient overlays for depth",
      "Navigation state management and stack actions",
      "Memoization for performance (memo, useCallback)"
    ],
    "for_advanced": [
      "Glassmorphism implementation techniques",
      "Performance optimization in navigation",
      "Complex navigation patterns (nested stacks with pop)",
      "Type-safe screen name mapping with TypeScript",
      "Platform-specific blur calibration",
      "Render order z-index strategies",
      "React Navigation customization patterns"
    ]
  },
  "comparison_to_similar_patterns": {
    "vs_default_react_navigation_tab_bar": {
      "similarity": "Uses same BottomTabBarProps interface",
      "difference": "Custom blur, gradient, floating pill design vs solid background"
    },
    "vs_ios_native_tab_bar": {
      "similarity": "Glassmorphic blur effect, translucent background",
      "difference": "Floating pill shape vs full-width bar, centered vs edge-to-edge"
    },
    "vs_android_material_bottom_nav": {
      "similarity": "Bottom navigation pattern",
      "difference": "Glassmorphism vs Material elevation/shadows"
    },
    "vs_floating_action_button": {
      "similarity": "Floating design, not full-width",
      "difference": "Multiple tabs vs single action button"
    }
  },
  "testing_considerations": {
    "visual_regression": [
      "Tab bar renders with correct blur effect",
      "Gradient overlay visible and positioned correctly",
      "Border radius and pill shape correct",
      "Icons rendered with correct size and color",
      "Safe area padding applied correctly on notched devices"
    ],
    "interaction_testing": [
      "Tapping tab switches screens",
      "Tapping active tab pops to root",
      "Opacity animation smooth on tab change",
      "Scale feedback on tab press",
      "All tabs accessible and functional"
    ],
    "animation_testing": [
      "Opacity transitions smooth (no sudden jumps)",
      "Focus tracking accurate",
      "Scale animation on press feels responsive",
      "No animation stuttering on tab switch"
    ],
    "navigation_testing": [
      "Navigation between tabs works correctly",
      "Nested navigation stack popping works",
      "Initial route renders correctly",
      "Navigation state persists correctly"
    ],
    "platform_testing": [
      "Blur intensity appropriate on both iOS and Android",
      "Border curve displays correctly on iOS",
      "Safe area handling works on various devices",
      "No layout issues on different screen sizes"
    ],
    "edge_cases": [
      "Many tabs (>4) - does layout break?",
      "Very long screen names",
      "Missing screen in ScreenNames mapping",
      "Rapid tab switching",
      "Low-end device performance with blur"
    ]
  },
  "accessibility_considerations": {
    "current_state": {
      "labels": "No accessibility labels on tab items",
      "roles": "No accessibility roles defined",
      "announcements": "No screen reader announcements",
      "keyboard": "No keyboard navigation",
      "reduced_motion": "No prefers-reduced-motion support"
    },
    "recommendations": [
      "Add accessibilityLabel to TabBarItem ('Home tab', 'Settings tab', etc.)",
      "Add accessibilityHint ('Double tap to go to Home screen')",
      "Add accessibilityRole='tab' to tab items",
      "Add accessibilityState={{selected: isFocused}} to indicate active tab",
      "Announce tab changes to screen reader",
      "Support keyboard navigation (arrow keys to switch tabs)",
      "Respect reduce motion (instant opacity change)",
      "Ensure sufficient color contrast on icons",
      "Add focus indicators for keyboard users"
    ]
  },
  "related_patterns": {
    "glassmorphism_ui": "Blur-based translucent UI elements",
    "floating_navigation": "Navigation elements that float above content",
    "ios_tab_bar": "iOS-style translucent tab bars",
    "pill_navigation": "Pill-shaped navigation elements",
    "bottom_sheet": "Bottom-positioned UI elements with blur"
  },
  "state_management": {
    "navigation_state": {
      "managed_by": "React Navigation",
      "current_tab": "state.index from BottomTabBarProps",
      "routes": "state.routes array with navigation state"
    },
    "focus_state": {
      "storage": "focusedIndex SharedValue",
      "updates": "On tab press via onTapIcon callback",
      "consumption": "useDerivedValue in TabBarItem for opacity"
    },
    "screen_state": {
      "freezeOnBlur": true,
      "effect": "Inactive screens frozen, don't re-render",
      "benefit": "Performance optimization"
    }
  },
  "bundle_size_impact": {
    "code_size": "~300 lines total (all components)",
    "dependencies": "expo-blur, expo-linear-gradient (likely already in project)",
    "assets": "3 demo images (~few hundred KB)",
    "runtime_memory": "Minimal - few SharedValues, no large data structures",
    "blur_performance": "Blur effects can be GPU-intensive on low-end devices"
  },
  "tags": [
    "bottom-navigation",
    "tab-bar",
    "glassmorphism",
    "blur-effect",
    "react-navigation",
    "floating-ui",
    "pill-design",
    "gradient",
    "reanimated",
    "expo-blur",
    "safe-area",
    "ios-style",
    "translucent",
    "navigation",
    "mobile-ui",
    "tab-transition"
  ],
  "content_hash": "6e2b38a18a1c0e3af28adb3720bdf5c8e9c31231bd590bd22c95bd403ac18247",
  "hash_algorithm": "sha256",
  "hash_generated_at": "2025-10-12T09:19:28.291Z",
  "last_validated": "2025-10-12T09:19:28.291Z"
}
