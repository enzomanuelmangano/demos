{
  "animation_name": "Logarithmic Spiral",
  "animation_slug": "spiral",
  "description": "An interactive generative art piece featuring 2000 circles arranged in a logarithmic spiral pattern. Touch to randomize the spiral angle with smooth spring animations. Uses Skia for GPU-accelerated rendering with sweep gradients and blur effects.",

  "main_features": [
    "2000 animated circles in logarithmic spiral pattern",
    "Touch interaction to randomize spiral angle",
    "Smooth spring animations for all circles",
    "Sweep gradient (cyan → magenta → yellow → cyan)",
    "Blur mask for glow effect",
    "Dynamic circle sizing based on distance from center",
    "GPU-accelerated Skia rendering"
  ],

  "file_structure": {
    "index.tsx": "Main component with spiral logic and rendering",
    "utils.ts": "Logarithmic spiral mathematical formula"
  },

  "core_technologies": {
    "rendering": "@shopify/react-native-skia",
    "animations": "react-native-reanimated",
    "mathematics": "Logarithmic spiral equations"
  },

  "packages_and_versions": {
    "@shopify/react-native-skia": {
      "version": "2.2.12",
      "components": ["Canvas", "Path", "Group", "SweepGradient", "BlurMask"],
      "hooks": ["usePathValue"],
      "utilities": ["interpolate", "Extrapolate", "vec"],
      "performance_benefit": "GPU-accelerated rendering of 2000 circles at 60fps"
    },
    "react-native-reanimated": {
      "version": "~4.1.1",
      "hooks": [
        "useSharedValue",
        "useAnimatedReaction",
        "makeMutable",
        "withSpring",
        "withTiming"
      ],
      "critical_feature": "makeMutable for creating 2000 SharedValues dynamically"
    }
  },

  "mathematical_foundation": {
    "spiral_type": "Logarithmic spiral (Equiangular spiral)",
    "formula": {
      "polar_form": "r = a * e^(k*θ)",
      "cartesian_form": {
        "x": "a * e^(k*angle) * cos(angle * index)",
        "y": "a * e^(k*angle) * sin(angle * index)"
      }
    },
    "parameters": {
      "a": {
        "value": "index / 4",
        "description": "Initial radius / growth factor",
        "effect": "Determines starting distance from origin for each point"
      },
      "k": {
        "value": 0.005,
        "description": "Growth rate constant",
        "effect": "Controls how quickly spiral expands outward"
      },
      "angle": {
        "value": "Math.PI / 2 (initial), randomized on touch",
        "description": "Rotation parameter",
        "effect": "Rotates the entire spiral pattern"
      },
      "index": {
        "value": "0 to 1999",
        "description": "Point index in spiral",
        "effect": "Each point has different angular position (angle * index)"
      }
    },
    "spiral_properties": {
      "self_similarity": "Spiral looks the same at any scale (fractal-like)",
      "constant_angle": "Tangent makes constant angle with radial line",
      "exponential_growth": "Distance from center grows exponentially",
      "natural_occurrence": "Found in nautilus shells, galaxies, hurricanes"
    }
  },

  "animation_techniques": {
    "coordinate_animation": {
      "pattern": "Array of SharedValues, each animating independently",
      "count": 2000,
      "implementation": "spiralCoordinates: SharedValue<{x: number, y: number}>[]",
      "animation": "withSpring(logarithmicSpiral({...}), { dampingRatio: 1 })",
      "trigger": "useAnimatedReaction watching angle changes"
    },
    "spring_config": {
      "duration": 3000,
      "dampingRatio": 1,
      "note": "Critical damping for smooth, non-oscillating motion"
    },
    "staggering": "Natural stagger from loop order (index 0 to 1999)",
    "simultaneous_updates": "All 2000 circles update when angle changes"
  },

  "skia_rendering_patterns": {
    "usePathValue": {
      "description": "Creates animated Skia Path that rebuilds when dependencies change",
      "worklet": true,
      "pattern": "Closure that receives mutable skPath and returns it",
      "rebuilds_when": "Any spiralCoordinates[i].value changes",
      "performance": "Automatic optimization - only rebuilds when needed"
    },
    "path_construction": {
      "method": "skPath.addCircle(x, y, radius)",
      "loop": "Iterates 2000 times, adds circle for each coordinate",
      "dynamic_radius": "Interpolated based on distanceFromCenter",
      "result": "Single Path object containing 2000 circles"
    },
    "group_transform": {
      "component": "Group",
      "transforms": [
        "translateX: width / 2",
        "translateY: height / 2"
      ],
      "purpose": "Centers spiral in canvas (transforms from origin to center)"
    },
    "sweep_gradient": {
      "type": "SweepGradient",
      "center": "vec(0, 0) (relative to Group, so canvas center)",
      "colors": ["cyan", "magenta", "yellow", "cyan"],
      "pattern": "CMYK-inspired color wheel",
      "effect": "Radial color gradient from center outward"
    },
    "blur_mask": {
      "component": "BlurMask",
      "blur": 5,
      "style": "solid",
      "effect": "Soft glow around all circles"
    }
  },

  "reanimated_patterns": {
    "shared_values": [
      {
        "name": "angle",
        "type": "SharedValue<number>",
        "initial": "Math.PI / 2",
        "updates": "Set to Math.PI * 2 * Math.random() on touch",
        "scope": "Single value controlling entire spiral"
      },
      {
        "name": "spiralCoordinates",
        "type": "SharedValue<{x: number, y: number}>[]",
        "count": 2000,
        "creation": "makeMutable() for each coordinate",
        "updates": "Each updates independently via withSpring",
        "scope": "One per circle"
      }
    ],
    "makeMutable_usage": {
      "purpose": "Dynamically create SharedValues in loops",
      "pattern": "makeMutable(initialValue)",
      "use_case": "Creating 2000 SharedValues without 2000 useSharedValue calls",
      "benefit": "Allows SharedValue creation outside of render/hook context"
    },
    "useAnimatedReaction": {
      "watches": "angle.get()",
      "triggers": "When angle value changes",
      "action": "Updates all 2000 spiralCoordinates with new positions",
      "loop": "for loop from 0 to 1999",
      "animation": "Each coordinate.set(withSpring(newPosition))",
      "performance_note": "Efficient because updates happen on UI thread"
    },
    "useMemo_coordinates": {
      "purpose": "Create spiralCoordinates array only once",
      "dependencies": ["angle"],
      "prevents": "Recreating 2000 SharedValues on every render",
      "critical": true
    }
  },

  "interaction_pattern": {
    "trigger": "Touch anywhere on screen",
    "component": "Transparent View with StyleSheet.absoluteFill",
    "event": "onTouchStart",
    "action": "angle.set(Math.PI * 2 * Math.random())",
    "randomization": "Random angle between 0 and 2π radians",
    "response": "All 2000 circles spring to new positions",
    "duration": "~3 seconds (spring animation)"
  },

  "visual_design": {
    "color_scheme": {
      "background": "#010101 (near black)",
      "gradient_colors": ["cyan", "magenta", "yellow", "cyan"],
      "color_theory": "CMYK subtractive primary colors in additive (screen) context"
    },
    "sizing_strategy": {
      "algorithm": "Interpolate based on distance from center",
      "calculation": "distanceFromCenter = Math.sqrt(x² + y²)",
      "max_distance": "Math.sqrt((width/2)² + (height/2)²)",
      "interpolation": {
        "input_range": "[0, MAX_DISTANCE_FROM_CENTER]",
        "output_range": "[1.2, 0.2]",
        "extrapolate": "CLAMP",
        "effect": "Larger circles at center (1.2px), smaller at edges (0.2px)"
      }
    },
    "blur_effect": {
      "radius": 5,
      "purpose": "Creates soft glow, enhances depth perception",
      "style": "solid (vs inner/outer)"
    },
    "composition": {
      "center_point": "Canvas center",
      "symmetry": "Radial symmetry around center",
      "density": "Higher density at center, spreads outward",
      "flow": "Spiral creates sense of rotation and movement"
    }
  },

  "performance_optimizations": {
    "skia_advantage": {
      "technique": "Single Path with 2000 circles vs 2000 React components",
      "benefit": "GPU-accelerated, minimal CPU usage",
      "fps": "Smooth 60fps even with 2000 animated elements"
    },
    "usePathValue_efficiency": {
      "pattern": "Automatically tracks dependencies and rebuilds only when needed",
      "vs_useDerivedValue": "Specialized for Path objects, more efficient",
      "worklet": "Runs on UI thread"
    },
    "useMemo_critical": {
      "what": "spiralCoordinates array creation",
      "prevents": "Creating 2000 new SharedValues every render",
      "impact": "Without this, app would crash or be extremely slow"
    },
    "worklet_math": {
      "function": "logarithmicSpiral",
      "directive": "'worklet'",
      "runs_on": "UI thread",
      "benefit": "No bridge crossing for 2000 coordinate calculations"
    },
    "spring_animation_efficiency": {
      "library": "Reanimated native springs",
      "runs_on": "UI thread",
      "simultaneous": "2000 springs calculated in parallel on GPU/UI thread"
    }
  },

  "mathematical_insights": {
    "coordinate_calculation": {
      "step_1": "a = index / 4",
      "step_2": "k = 0.005",
      "step_3": "r = a * e^(k*angle)",
      "step_4": "θ = angle * index",
      "step_5": "x = r * cos(θ)",
      "step_6": "y = r * sin(θ)"
    },
    "why_logarithmic": {
      "property": "Exponential growth in radius",
      "formula": "e^(k*angle) term causes exponential expansion",
      "visual_effect": "Smooth spiral that grows outward",
      "alternative": "Archimedean spiral would be linear growth (r = a + b*θ)"
    },
    "angle_multiplication": {
      "formula": "angle * index",
      "effect": "Each point has different angular position",
      "pattern": "Higher index → more rotations around center",
      "creates": "Spiral pattern rather than circle"
    },
    "distance_formula": {
      "calculation": "Math.sqrt(x² + y²)",
      "purpose": "Euclidean distance from origin",
      "used_for": "Interpolating circle radius"
    }
  },

  "artistic_characteristics": {
    "genre": "Generative art",
    "style": "Organic, flowing, hypnotic",
    "inspiration": "Natural patterns (nautilus, galaxies, flowers)",
    "interactivity": "Participatory - viewer influences output",
    "randomness": "Deterministic chaos - same seed produces same result",
    "aesthetic": {
      "colors": "Vibrant, psychedelic gradient",
      "form": "Mathematical elegance",
      "movement": "Smooth, organic transitions",
      "mood": "Mesmerizing, meditative"
    }
  },

  "code_quality": {
    "typescript": "Full TypeScript with explicit types",
    "type_definitions": [
      "SharedValue<{x: number, y: number}>[]"
    ],
    "constants": {
      "spiralCircleCount": 2000,
      "TimingConfig": {
        "duration": 3000,
        "dampingRatio": 1.2
      }
    },
    "worklet_annotations": [
      "logarithmicSpiral function",
      "usePathValue callback"
    ],
    "documentation": {
      "inline_comments": "Minimal, code is self-documenting",
      "function_names": "Descriptive (logarithmicSpiral)"
    }
  },

  "configuration": {
    "adjustable_constants": {
      "spiralCircleCount": {
        "current": 2000,
        "effect": "Number of circles in spiral",
        "performance_impact": "Linear - more circles = more calculations",
        "recommended_range": "500-5000"
      },
      "k_growth_rate": {
        "current": 0.005,
        "effect": "How quickly spiral expands outward",
        "higher_values": "Tighter spiral",
        "lower_values": "Looser spiral"
      },
      "a_calculation": {
        "current": "index / 4",
        "effect": "Initial radius per point",
        "divisor_effect": "Lower divisor = larger starting radius"
      },
      "blur_radius": {
        "current": 5,
        "effect": "Glow intensity",
        "range": "0-20 typical"
      },
      "spring_duration": {
        "current": 3000,
        "effect": "How long animation takes",
        "range": "1000-5000ms recommended"
      },
      "dampingRatio": {
        "current": 1,
        "effect": "Spring oscillation (1 = critical damping, no overshoot)",
        "range": "0.5-2.0"
      }
    },
    "gradient_colors": {
      "current": ["cyan", "magenta", "yellow", "cyan"],
      "customizable": true,
      "must_have": "At least 2 colors",
      "note": "First and last color same = smooth loop"
    }
  },

  "use_cases": {
    "primary": [
      "Generative art showcase",
      "Loading screens",
      "Meditation/relaxation apps",
      "Music visualizers"
    ],
    "educational": [
      "Teaching logarithmic spirals",
      "Demonstrating Skia performance",
      "Showing SharedValue arrays",
      "Interactive math visualization"
    ],
    "design_patterns": [
      "Splash screens",
      "Background animations",
      "Interactive art installations"
    ]
  },

  "known_limitations": {
    "performance": {
      "max_circles": "~5000 before performance degrades",
      "device_dependent": "Older devices may struggle with 2000 circles",
      "platform": "Works on iOS, Android, and Web"
    },
    "animation_start": {
      "issue": "Initial render uses angle.get() not angle.value",
      "impact": "Ensures coordinates use current angle value",
      "correct": "Using .get() in useMemo is intentional"
    },
    "touch_precision": {
      "issue": "Entire screen is touch target",
      "enhancement": "Could add specific touch regions or gestures"
    }
  },

  "potential_improvements": {
    "interactivity": [
      "Pinch to zoom",
      "Two-finger rotate",
      "Drag to manually set angle",
      "Multi-touch for multiple spirals"
    ],
    "animation": [
      "Continuous slow rotation",
      "Pulse animation on circles",
      "Color animation in gradient",
      "Particle trails"
    ],
    "customization": [
      "UI controls for parameters (k, a, count)",
      "Color picker for gradient",
      "Export as image/video",
      "Preset patterns"
    ],
    "mathematical": [
      "Different spiral types (Archimedean, Fermat)",
      "3D spiral (helix)",
      "Multiple spirals",
      "Fibonacci spiral"
    ]
  },

  "key_insights": {
    "makeMutable_power": "Enables creating thousands of SharedValues dynamically",
    "usePathValue_efficiency": "Specialized hook for Skia Paths, better than useDerivedValue",
    "mathematical_beauty": "Complex visual output from simple mathematical formula",
    "spring_coordination": "2000 independent springs create emergent organic motion",
    "skia_performance": "Can render thousands of animated shapes at 60fps",
    "gradient_application": "SweepGradient applied to entire Path, not per-circle",
    "worklet_necessity": "All math must run on UI thread for performance"
  },

  "learning_opportunities": {
    "for_beginners": [
      "Basic Skia Canvas rendering",
      "Touch interactions in React Native",
      "SharedValue basics",
      "Mathematical function visualization"
    ],
    "for_intermediate": [
      "makeMutable for dynamic SharedValue arrays",
      "usePathValue for animated Paths",
      "useAnimatedReaction patterns",
      "Skia Group transforms",
      "Interpolation with Extrapolate"
    ],
    "for_advanced": [
      "Performance optimization with thousands of elements",
      "Logarithmic spiral mathematics",
      "GPU-accelerated rendering strategies",
      "Worklet optimization patterns",
      "Generative art algorithms"
    ]
  },

  "related_concepts": {
    "mathematical": [
      "Fibonacci sequence and golden ratio",
      "Polar coordinates",
      "Exponential functions",
      "Trigonometry (sine, cosine)"
    ],
    "natural_phenomena": [
      "Nautilus shell growth",
      "Galaxy spiral arms",
      "Hurricane/cyclone patterns",
      "Sunflower seed arrangements",
      "DNA double helix"
    ],
    "artistic_movements": [
      "Generative art",
      "Algorithmic art",
      "Op art (optical art)",
      "Sacred geometry"
    ],
    "programming_patterns": [
      "Particle systems",
      "Procedural generation",
      "Data visualization",
      "Interactive installations"
    ]
  },

  "testing_considerations": {
    "visual_testing": [
      "Verify spiral renders correctly",
      "Check gradient applies smoothly",
      "Confirm blur effect visible",
      "Test on various screen sizes"
    ],
    "interaction_testing": [
      "Touch updates angle",
      "Animation completes smoothly",
      "Multiple rapid touches handled gracefully",
      "No lag or frame drops"
    ],
    "performance_testing": [
      "Monitor FPS during animation",
      "Check memory usage",
      "Test on low-end devices",
      "Verify no memory leaks"
    ],
    "mathematical_verification": [
      "Verify spiral shape matches logarithmic formula",
      "Check circle positions at known angles",
      "Validate radius interpolation",
      "Confirm exponential growth rate"
    ]
  },

  "accessibility_considerations": {
    "motion_sickness": "Rapid transitions might trigger motion sensitivity",
    "color_contrast": "High contrast between background and gradient",
    "interaction_feedback": "Visual animation provides clear feedback",
    "alternative_needed": "No text or essential information in animation",
    "recommendations": [
      "Add prefers-reduced-motion support",
      "Slower animation option",
      "Pause button",
      "Color blind friendly palette option"
    ]
  },

  "comparison_to_similar_animations": {
    "vs_particle_systems": {
      "similarity": "Many independent elements",
      "difference": "Mathematically positioned, not physics-based"
    },
    "vs_lottie_animations": {
      "similarity": "Smooth, looping animations",
      "difference": "Fully procedural, not pre-rendered"
    },
    "vs_css_animations": {
      "similarity": "Visual effects",
      "difference": "GPU-accelerated Skia, 60fps with 2000 elements"
    }
  },

  "bundle_size_impact": {
    "code_size": "Very small (~50 lines main code + ~15 lines util)",
    "dependencies": "Only Skia and Reanimated (likely already in project)",
    "runtime_memory": "~2000 SharedValues + Path object + coordinate arrays",
    "estimated_memory": "< 1MB"
  },

  "tags": [
    "generative-art",
    "skia",
    "reanimated",
    "mathematical",
    "logarithmic-spiral",
    "interactive",
    "particles",
    "gradient",
    "blur",
    "performance",
    "worklets",
    "procedural",
    "touch-interaction"
  ]
}
