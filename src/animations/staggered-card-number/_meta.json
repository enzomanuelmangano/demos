{
  "animation_name": "Staggered Card Number",
  "animation_slug": "staggered-card-number",
  "description": "An elegant credit card number visibility toggle animation with staggered reveal/hide transitions. Each digit independently animates between its numeric value and a dot placeholder using synchronized vertical slide animations with blur effects. The animation creates a wave-like cascade effect by applying progressive delays to each digit, enhanced with platform-specific blur during transitions for a polished, banking-app quality interaction.",

  "main_features": [
    "Staggered digit-by-digit reveal/hide animations with progressive delays",
    "Vertical slide transitions between numbers and dots",
    "Platform-specific blur effects during transitions (iOS native, Android skipped)",
    "Independent animation control for first 12 digits",
    "Smooth spring physics for organic motion",
    "Custom touchable feedback with scale and opacity effects",
    "Eye icon toggle indicating visibility state",
    "Automatic grouping of digits (4-4-4-4 credit card format)",
    "Memoized components for optimal performance",
    "Elegant card UI with subtle shadows and rounded corners"
  ],

  "file_structure": {
    "index.tsx": "Main demo screen with centered CardInfo component",
    "components/card-info/index.tsx": "Container managing card number state, toggle logic, and digit layout",
    "components/card-info/hideable-number.tsx": "Individual digit component with staggered slide/blur animation",
    "components/touchables/touchable-feedback.tsx": "Reusable pressable with scale and opacity feedback animations"
  },

  "core_technologies": {
    "animations": "react-native-reanimated",
    "gestures": "react-native-gesture-handler",
    "blur_effects": "expo-blur",
    "icons": "@expo/vector-icons",
    "threading": "react-native-worklets",
    "pattern": "Staggered delays + Transform animations + Blur effects"
  },

  "packages_and_versions": {
    "react-native-reanimated": {
      "version": "~4.1.1",
      "hooks": [
        "useDerivedValue",
        "useAnimatedStyle",
        "useAnimatedProps",
        "useSharedValue"
      ],
      "utilities": [
        "withDelay",
        "withSpring",
        "withTiming",
        "interpolate",
        "Animated.createAnimatedComponent"
      ],
      "components": ["Animated.View"],
      "critical_feature": "Staggered delays combined with spring animations and blur intensity control"
    },
    "react-native-gesture-handler": {
      "version": "~2.28.0",
      "components": ["GestureDetector", "Gesture"],
      "gestures": ["Tap with custom duration and lifecycle hooks"],
      "usage": "Touch feedback for toggle button and pressable components"
    },
    "expo-blur": {
      "version": "~15.0.7",
      "components": ["BlurView"],
      "usage": "Animated blur effect during digit transitions (iOS only)",
      "animated": "AnimatedBlurView created via createAnimatedComponent",
      "properties": "Animated intensity prop (0 to 25)"
    },
    "@expo/vector-icons": {
      "version": "^15.0.2",
      "icon_sets": ["Feather", "Octicons"],
      "icons_used": {
        "Feather": ["eye", "eye-off"],
        "Octicons": ["dot-fill"]
      },
      "usage": "Visibility toggle button and dot placeholders for hidden digits"
    },
    "react-native-worklets": {
      "version": "0.5.1",
      "imports": ["scheduleOnRN"],
      "usage": "Bridge UI thread gesture callbacks to JS thread for state updates"
    }
  },

  "animation_techniques": {
    "staggered_delay_pattern": {
      "pattern": "Progressive delay based on digit index",
      "formula": "withDelay(index * 25, withSpring(...))",
      "delay_per_digit": "25ms",
      "total_cascade_duration": "12 digits × 25ms = 300ms",
      "effect": "Wave-like reveal/hide animation across all digits",
      "direction": "Left to right (index 0 to 11)",
      "visual_impact": "Creates elegant cascading effect reminiscent of banking apps"
    },
    "vertical_slide_transition": {
      "pattern": "Dual-layer animation with opposing translateY directions",
      "layers": {
        "number_layer": {
          "initial_position": "translateY: 0",
          "hidden_position": "translateY: 25 (slides down)",
          "interpolation": "[0, 1] → [0, HideableNumberHeight]"
        },
        "dot_layer": {
          "initial_position": "translateY: -25 (above visible area)",
          "visible_position": "translateY: 0 (slides down into view)",
          "interpolation": "[0, 1] → [-HideableNumberHeight, 0]"
        }
      },
      "overflow": "hidden",
      "container_height": "25px (HideableNumberHeight)",
      "effect": "Number slides down as dot slides down from above, creating seamless swap"
    },
    "opacity_transitions": {
      "pattern": "Cubic easing for smooth fade effects",
      "number_opacity": {
        "formula": "(1 - animationProgress.value) ** 3",
        "range": "1 → 0 (visible to hidden)",
        "easing": "Cubic for gradual then rapid fade"
      },
      "dot_opacity": {
        "formula": "animationProgress.value ** 3",
        "range": "0 → 1 (hidden to visible)",
        "easing": "Cubic for rapid then gradual appearance"
      },
      "benefit": "Smooth visual transition prevents jarring swaps"
    },
    "blur_intensity_animation": {
      "pattern": "Animated blur during transitions (iOS only)",
      "max_intensity": 25,
      "number_blur": {
        "formula": "MaxBlurIntensity * animationProgress.value",
        "range": "0 → 25 (clear to blurred as it hides)"
      },
      "dot_blur": {
        "formula": "MaxBlurIntensity * (1 - animationProgress.value)",
        "range": "25 → 0 (blurred to clear as it appears)"
      },
      "platform": "iOS only (Platform.OS === 'ios' check)",
      "effect": "Adds depth and polish to transitions"
    },
    "spring_physics": {
      "animation": "withSpring",
      "config": {
        "mass": 0.75,
        "damping": "default",
        "stiffness": "default"
      },
      "feel": "Lighter mass creates snappy, responsive motion",
      "overshoot": "Minimal bounce for professional banking UI aesthetic"
    },
    "touchable_feedback": {
      "scale_animation": {
        "pattern": "Scale down on press, scale up on release",
        "normal": 1,
        "pressed": 0.9,
        "animation": "withTiming()",
        "duration": 100
      },
      "opacity_overlay": {
        "pattern": "Dark overlay on press",
        "formula": "interpolate(progress.value, [0, 1], [0, 0.1])",
        "background": "rgba(0,0,0,${opacity})",
        "effect": "Subtle darkening feedback"
      }
    }
  },

  "reanimated_patterns": {
    "useDerivedValue_for_state": {
      "location": "CardInfo component",
      "computation": "Calculate array of hidden digit indexes based on toggle state",
      "logic": "toggled ? [0,1,2,3,4,5,6,7,8,9,10,11] : []",
      "dependencies": ["toggled"],
      "output": "SharedValue<number[]>",
      "benefit": "Reactive array that triggers animations when toggle state changes"
    },
    "useDerivedValue_for_visibility_check": {
      "location": "HideableNumber component",
      "computation": "Check if current digit index is in hiddenIndexes array",
      "formula": "hiddenIndexes.value.includes(index)",
      "dependencies": ["hiddenIndexes", "index"],
      "output": "SharedValue<boolean>",
      "reactivity": "Re-evaluates when hiddenIndexes changes"
    },
    "staggered_spring_animation": {
      "pattern": "withDelay wrapping withSpring",
      "implementation": "withDelay(index * 25, withSpring(isHidden.value ? 1 : 0, { mass: 0.75 }))",
      "delay_calculation": "index * HideableNumberHeight (25ms per digit)",
      "spring_target": "0 (visible) or 1 (hidden)",
      "dependencies": ["isHidden", "index"],
      "effect": "Each digit animates independently with progressive delay"
    },
    "position_interpolations": {
      "dot_position": {
        "hook": "useDerivedValue",
        "formula": "interpolate(animationProgress.value, [0, 1], [-25, 0])",
        "effect": "Dot slides down from above"
      },
      "text_position": {
        "hook": "useDerivedValue",
        "formula": "interpolate(animationProgress.value, [0, 1], [0, 25])",
        "effect": "Number slides down out of view"
      }
    },
    "useAnimatedStyle_layers": {
      "pattern": "Separate animated styles for dot and text layers",
      "dot_style": {
        "opacity": "animationProgress.value ** 3",
        "transform": "[{ translateY: dotPositionY.value }]"
      },
      "text_style": {
        "opacity": "(1 - animationProgress.value) ** 3",
        "transform": "[{ translateY: textPositionY.value }]"
      },
      "dependencies": ["animationProgress"],
      "applied_to": "Animated.View components"
    },
    "useAnimatedProps_for_blur": {
      "pattern": "Animated props for BlurView intensity",
      "text_blur": {
        "formula": "{ intensity: MaxBlurIntensity * animationProgress.value }",
        "effect": "Blur increases as number hides"
      },
      "dot_blur": {
        "formula": "{ intensity: MaxBlurIntensity * (1 - animationProgress.value) }",
        "effect": "Blur decreases as dot appears"
      },
      "applied_to": "AnimatedBlurView components"
    },
    "gesture_with_shared_value": {
      "location": "TouchableFeedback component",
      "pattern": "Tap gesture controlling shared value progress",
      "lifecycle": {
        "onTouchesDown": "progress.value = withTiming(1, { duration: 100 })",
        "onTouchesUp": "Trigger callback via scheduleOnRN",
        "onFinalize": "progress.value = withTiming(0)"
      },
      "drives": "Scale and opacity animations"
    }
  },

  "component_architecture": {
    "staggered_card_number": {
      "type": "Root demo component",
      "file": "index.tsx",
      "responsibilities": [
        "Provide demo container",
        "Center CardInfo component",
        "Set background color"
      ],
      "hardcoded_data": "cardNumber: 2223000048400011 (16 digits)"
    },
    "card_info": {
      "type": "Container component",
      "memo": true,
      "file": "components/card-info/index.tsx",
      "props": {
        "cardNumber": {
          "type": "number",
          "required": true,
          "description": "16-digit credit card number"
        }
      },
      "state": {
        "toggled": {
          "type": "boolean",
          "initial": false,
          "updates": "Via onToggle callback"
        }
      },
      "derived_values": {
        "splittedNumber": "cardNumber.toString().split('') (array of 16 strings)",
        "hiddenIndexes": "SharedValue<number[]> - first 12 indexes when toggled"
      },
      "responsibilities": [
        "Parse card number into digit array",
        "Manage visibility toggle state",
        "Calculate hidden digit indexes (first 12)",
        "Layout digits with proper spacing (4-4-4-4 groups)",
        "Render toggle button with eye icon"
      ],
      "layout": {
        "container": "Card-style with shadow and rounded corners",
        "digits_layout": "Horizontal row with spacing after every 4th digit",
        "button_position": "Right side with flex spacer"
      }
    },
    "hideable_number": {
      "type": "Individual digit component",
      "memo": true,
      "file": "components/card-info/hideable-number.tsx",
      "props": {
        "number": {
          "type": "string",
          "required": true,
          "description": "Single digit character (0-9)"
        },
        "hiddenIndexes": {
          "type": "SharedValue<number[]>",
          "required": true,
          "description": "Array of indexes to hide"
        },
        "index": {
          "type": "number",
          "required": true,
          "description": "Position in card number (0-15)"
        }
      },
      "constants": {
        "HideableNumberHeight": 25,
        "MaxBlurIntensity": 25,
        "DotSize": 14
      },
      "derived_values": {
        "isHidden": "Boolean derived from hiddenIndexes.includes(index)",
        "animationProgress": "0 to 1 with staggered delay and spring",
        "dotPositionY": "Interpolated translateY for dot (-25 to 0)",
        "textPositionY": "Interpolated translateY for text (0 to 25)"
      },
      "responsibilities": [
        "Determine if this digit should be hidden",
        "Animate between number and dot states",
        "Apply staggered delay based on index",
        "Control blur intensity during transition",
        "Manage opacity transitions"
      ],
      "structure": {
        "container": "11px width, 25px height, overflow hidden",
        "dot_layer": "Positioned absolutely, slides down from above",
        "text_layer": "Positioned absolutely, slides down out of view",
        "blur_overlays": "Absolute positioned AnimatedBlurView (iOS only)"
      }
    },
    "touchable_feedback": {
      "type": "Reusable pressable component",
      "memo": true,
      "file": "components/touchables/touchable-feedback.tsx",
      "props": {
        "style": {
          "type": "StyleProp<ViewStyle>",
          "required": false
        },
        "onTap": {
          "type": "() => void",
          "required": false,
          "description": "Callback on tap gesture"
        },
        "onLongTap": {
          "type": "() => void",
          "required": false,
          "description": "Callback on long press (500ms)"
        },
        "children": {
          "type": "ReactNode",
          "required": false
        }
      },
      "gestures": {
        "tap_gesture": {
          "maxDuration": 10000,
          "onTouchesDown": "Scale down animation",
          "onTouchesUp": "Trigger onTap callback",
          "onFinalize": "Reset scale"
        },
        "long_tap_gesture": {
          "minDuration": 500,
          "onStart": "Trigger onLongTap callback"
        },
        "composition": "Gesture.Simultaneous for both gestures"
      },
      "animations": {
        "scale": "1 → 0.9 → 1",
        "opacity_overlay": "0 → 0.1 → 0",
        "timing": "100ms withTiming"
      }
    }
  },

  "digit_grouping_logic": {
    "pattern": "Visual spacing after every 4th digit",
    "implementation": {
      "check": "index !== 0 && (index + 1) % 4 === 0",
      "spacing": "marginRight: 8",
      "example": "Digits at positions 3, 7, 11 get extra margin"
    },
    "visual_result": {
      "format": "#### #### #### ####",
      "groups": "4-4-4-4 (standard credit card format)",
      "example": "2223 0000 4840 0011"
    },
    "hidden_digits": {
      "count": 12,
      "indexes": "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",
      "visible_digits": "Last 4 digits (indexes 12-15)",
      "format_when_hidden": "•••• •••• •••• 0011"
    }
  },

  "stagger_timing_breakdown": {
    "delay_formula": "index * 25ms",
    "digit_timings": {
      "digit_0": "0ms delay",
      "digit_1": "25ms delay",
      "digit_2": "50ms delay",
      "digit_3": "75ms delay",
      "digit_4": "100ms delay",
      "digit_5": "125ms delay",
      "digit_6": "150ms delay",
      "digit_7": "175ms delay",
      "digit_8": "200ms delay",
      "digit_9": "225ms delay",
      "digit_10": "250ms delay",
      "digit_11": "275ms delay",
      "digits_12_15": "Not animated (always visible)"
    },
    "total_cascade": "300ms (from first to last digit starting)",
    "spring_duration": "~500-700ms (depends on spring physics)",
    "total_animation": "~800-1000ms (cascade + spring settle)",
    "visual_effect": "Left-to-right wave of digits transforming"
  },

  "performance_optimizations": {
    "memo_usage": {
      "components": ["CardInfo", "HideableNumber", "TouchableFeedback"],
      "benefit": "Prevents re-renders when sibling components update",
      "critical_for": "16 HideableNumber instances rendering independently"
    },
    "useCallback_stability": {
      "onToggle": {
        "location": "CardInfo component",
        "dependencies": [],
        "benefit": "Stable callback reference prevents TouchableFeedback re-renders"
      }
    },
    "platform_specific_rendering": {
      "pattern": "Platform.OS === 'ios' checks for BlurView",
      "benefit": "Avoids rendering blur components on Android (not supported)",
      "impact": "Reduces component tree on Android"
    },
    "ui_thread_animations": {
      "scroll_events": "None (static card)",
      "gesture_handling": "Tap gestures run on UI thread",
      "animated_styles": "All style calculations on UI thread",
      "bridge_crossings": "Only for state updates (via scheduleOnRN)"
    },
    "derived_value_dependencies": {
      "pattern": "Explicit dependency arrays",
      "examples": [
        "useDerivedValue(..., [toggled])",
        "useDerivedValue(..., [hiddenIndexes, index])",
        "useDerivedValue(..., [isHidden, index])"
      ],
      "benefit": "Only recomputes when dependencies actually change"
    },
    "overflow_clipping": {
      "container": "overflow: 'hidden'",
      "dimensions": "11px × 25px per digit",
      "benefit": "Clips layers outside bounds, no rendering of hidden parts"
    }
  },

  "visual_design": {
    "color_scheme": {
      "background": "#eaeaea (light gray)",
      "card_background": "white",
      "shadow": {
        "color": "#000",
        "opacity": 0.05,
        "offset": { "width": 0, "height": 2 },
        "radius": 20
      },
      "text_color": "black",
      "icon_color": "#38a27b (teal green)",
      "label_color": "#787878 (medium gray)"
    },
    "typography": {
      "card_number": {
        "fontFamily": "FiraCode-Regular (monospaced)",
        "fontSize": 20,
        "reason": "Monospace ensures consistent digit spacing"
      },
      "label": {
        "fontSize": 17,
        "fontWeight": "400",
        "text": "Number"
      }
    },
    "dimensions": {
      "card_width": "90% of screen width",
      "card_height": 80,
      "card_padding": {
        "horizontal": 25,
        "top": 15,
        "bottom": 10
      },
      "card_border_radius": 20,
      "button_aspect_ratio": 1,
      "button_border_radius": 4,
      "digit_width": 11,
      "digit_height": 25,
      "dot_size": 14,
      "digit_spacing": "8px after every 4th digit"
    },
    "layout": {
      "card_structure": "Horizontal flexDirection: 'row'",
      "left_section": "Label + digit row",
      "center_spacer": "flex: 1 (pushes button to right)",
      "right_section": "Toggle button",
      "digit_row": "Horizontal with conditional margins"
    },
    "shadow_details": {
      "elevation": "Subtle (shadowOpacity: 0.05)",
      "blur": "Soft (shadowRadius: 20)",
      "offset": "Slight downward (height: 2)",
      "effect": "Floating card appearance"
    }
  },

  "use_cases": {
    "primary": [
      "Credit/debit card displays in payment apps",
      "Banking apps showing sensitive account numbers",
      "E-commerce checkout card input",
      "Wallet apps with stored payment methods",
      "Password/PIN displays with show/hide toggle",
      "Social security number masking",
      "Phone number privacy controls"
    ],
    "secondary": [
      "Any sensitive numeric data display",
      "API key/token displays in developer tools",
      "License key displays",
      "Tracking number reveals",
      "Serial number displays",
      "Account ID masking"
    ],
    "demonstrates": [
      "Staggered animation techniques",
      "Dual-layer slide animations",
      "Platform-specific blur integration",
      "Credit card number formatting",
      "Privacy-focused UI patterns",
      "Reusable touchable components"
    ],
    "real_world_examples": [
      "Apple Wallet card number display",
      "Google Pay saved cards",
      "Banking app account masking",
      "PayPal card management",
      "Stripe dashboard test cards",
      "Revolut card details screen"
    ]
  },

  "code_quality": {
    "strengths": [
      "Full TypeScript with explicit type definitions",
      "Comprehensive inline comments explaining animation logic",
      "Proper component memoization for performance",
      "Platform-specific feature detection (iOS blur)",
      "Reusable TouchableFeedback component",
      "Clean separation of concerns (card logic vs digit animation)",
      "Named constants for magic numbers (HideableNumberHeight, MaxBlurIntensity)",
      "Proper gesture handling with worklets",
      "Responsive design with percentage-based card width",
      "Accessibility considerations (eye icon for visibility state)"
    ],
    "areas_for_improvement": [
      "Could add accessibility labels for screen readers",
      "Missing accessibility announcement when visibility toggles",
      "No reduced motion support for users with motion sensitivity",
      "Hardcoded delay multiplier (25) could be extracted to constant",
      "Card number validation not implemented",
      "Could add prop for customizing which digits to hide (currently hardcoded 0-11)",
      "Missing error handling for invalid card numbers",
      "Could expose spring configuration as props for customization",
      "Font family requires custom font loading (FiraCode)",
      "No haptic feedback on toggle (could use expo-haptics)"
    ]
  },

  "known_limitations": {
    "platform_specific": {
      "blur_effect": {
        "limitation": "Blur only works on iOS",
        "impact": "Android users see instant opacity change without blur polish",
        "workaround": "Animation still smooth, just lacks blur effect",
        "reason": "expo-blur requires iOS native support"
      }
    },
    "fixed_configuration": {
      "hidden_digit_count": {
        "limitation": "Always hides first 12 digits",
        "hardcoded": "Array.from({ length: 12 }, (_, index) => index)",
        "inflexible": "Cannot hide different range without code change"
      },
      "delay_timing": {
        "limitation": "Fixed 25ms delay per digit",
        "hardcoded": "index * HideableNumberHeight",
        "customization": "Requires code modification to adjust"
      }
    },
    "font_dependency": {
      "limitation": "Requires FiraCode-Regular font",
      "impact": "Falls back to system font if not loaded",
      "spacing_issues": "Non-monospace fallback breaks visual alignment"
    },
    "card_number_format": {
      "limitation": "Assumes 16-digit card numbers",
      "no_support": "15-digit Amex, 13-digit Visa, variable length cards",
      "grouping": "4-4-4-4 format hardcoded"
    },
    "accessibility": {
      "screen_readers": "No accessibility labels on digits",
      "announcements": "No announcement when visibility toggles",
      "reduced_motion": "No respect for prefers-reduced-motion",
      "semantic_markup": "Missing role/label attributes"
    }
  },

  "potential_improvements": {
    "animation_enhancements": [
      "Reverse stagger direction (right-to-left option)",
      "Configurable stagger delay via props",
      "Different animation styles (fade, scale, rotate)",
      "Sound effect on toggle (optional)",
      "Haptic feedback on toggle",
      "Particle effect or shimmer on reveal",
      "Different blur intensities",
      "Color shift during transition"
    ],
    "feature_additions": [
      "Support for different card formats (Amex, Visa, etc.)",
      "Automatic card type detection (Visa, Mastercard, etc.)",
      "Card brand logo display",
      "Copy to clipboard functionality",
      "Configurable which digits to hide (first N, last N, middle)",
      "Auto-hide after timeout",
      "Biometric authentication before reveal",
      "Custom dot character (*, •, etc.)",
      "Animated card brand detection"
    ],
    "accessibility_improvements": [
      "Add accessibilityLabel for full card number",
      "Add accessibilityHint for toggle button",
      "Announce state changes to screen readers",
      "Respect prefers-reduced-motion",
      "Add accessible role attributes",
      "Keyboard navigation support",
      "Focus indicators"
    ],
    "customization_options": [
      "Expose spring configuration as props",
      "Customizable colors via props",
      "Adjustable blur intensity",
      "Custom icon support (not just eye/eye-off)",
      "Configurable digit grouping (3-4-4, 4-6-5, etc.)",
      "Theme support (light/dark modes)",
      "Custom dot size and style"
    ],
    "developer_experience": [
      "Card number validation",
      "Luhn algorithm check",
      "Error states and handling",
      "Loading states",
      "Prop documentation",
      "Storybook examples",
      "Unit tests for animation logic",
      "Visual regression tests"
    ]
  },

  "key_insights": {
    "stagger_creates_elegance": "Progressive 25ms delays transform simple hide/show into elegant wave animation",
    "dual_layer_seamlessness": "Opposing translateY directions on dot and text layers create seamless swap illusion",
    "cubic_opacity_refinement": "Cubic easing on opacity (value ** 3) creates smooth perceptual fade",
    "blur_adds_polish": "Platform-specific blur during transitions elevates animation quality significantly",
    "overflow_is_critical": "11px width + overflow:hidden container enables clean slide without visible layers",
    "monospace_alignment": "FiraCode ensures perfect digit alignment for professional card appearance",
    "first_12_pattern": "Hiding first 12 of 16 digits follows banking industry standard (show last 4)",
    "index_as_delay": "Using digit index directly as delay multiplier creates perfectly timed cascade",
    "memo_performance": "Memoizing 16 digit components prevents unnecessary re-renders during animations",
    "spring_mass_tuning": "0.75 mass creates lighter, snappier feel appropriate for UI feedback",
    "scheduleOnRN_bridge": "Essential for safely calling JS callbacks from UI thread gestures"
  },

  "learning_opportunities": {
    "for_beginners": [
      "Basic state management with useState",
      "Conditional rendering (toggled state)",
      "Array manipulation (split, map)",
      "Platform-specific rendering",
      "Icon libraries usage",
      "Component props and composition"
    ],
    "for_intermediate": [
      "Staggered animations with withDelay",
      "useDerivedValue for reactive computations",
      "useAnimatedStyle for transform animations",
      "useAnimatedProps for component props",
      "Gesture handler tap detection",
      "Platform-specific blur effects",
      "Overflow clipping techniques",
      "Cubic easing for opacity",
      "Component memoization patterns",
      "useCallback for stable references"
    ],
    "for_advanced": [
      "Coordinating multiple animated layers",
      "Progressive delay patterns",
      "Interpolation for position calculations",
      "Thread-safe gesture callbacks (scheduleOnRN)",
      "Platform-specific API conditionals",
      "Creating reusable animated components",
      "Performance optimization with memo",
      "Spring physics tuning (mass parameter)",
      "Blur intensity animation",
      "Absolute positioning for layered animations"
    ]
  },

  "testing_considerations": {
    "unit_tests": [
      "Card number parsing produces correct digit array",
      "Hidden indexes calculated correctly when toggled",
      "Index checking logic (includes) works",
      "Digit grouping logic (4-4-4-4) correct",
      "Platform detection for blur rendering"
    ],
    "component_tests": [
      "CardInfo renders all 16 digits",
      "Toggle button updates state",
      "Eye icon changes on toggle",
      "HideableNumber receives correct props",
      "TouchableFeedback triggers callback"
    ],
    "animation_tests": [
      "Stagger delays calculated correctly per digit",
      "Animation progress interpolates 0 to 1",
      "Position interpolations produce correct values",
      "Opacity calculations (cubic) work correctly",
      "Blur intensity animates on iOS",
      "Spring animations settle to final state"
    ],
    "visual_tests": [
      "Digits cascade smoothly left to right",
      "No visible layers outside overflow containers",
      "Spacing correct after every 4th digit",
      "Card shadow renders properly",
      "Toggle button scales on press",
      "Blur effect visible during transition (iOS)"
    ],
    "edge_cases": [
      "Rapid toggle (animation interruption)",
      "Toggle during mid-animation",
      "Invalid card number (non-numeric)",
      "Missing custom font fallback",
      "Android blur fallback behavior",
      "Very long card numbers (> 16 digits)",
      "Missing onTap callback",
      "Different screen sizes"
    ],
    "accessibility_tests": [
      "Screen reader announces card number",
      "Toggle button accessible",
      "Reduced motion preference (when implemented)",
      "Keyboard navigation (when implemented)",
      "Touch target size adequate"
    ]
  },

  "animation_choreography": {
    "timing_coordination": {
      "stagger_phase": "0-300ms (delays spread across 12 digits)",
      "spring_phase": "Overlapping springs (each 500-700ms)",
      "total_duration": "~800-1000ms (stagger + spring settle)",
      "overlap": "Later digits start before earlier ones finish"
    },
    "visual_progression": {
      "start": "All digits show numbers, toggle is 'eye-off'",
      "early": "Left digits begin sliding and blurring",
      "middle": "Wave of transformation moves right",
      "late": "Right digits (last 4) remain visible",
      "end": "First 12 show dots, last 4 show numbers, toggle is 'eye'"
    },
    "reverse_choreography": {
      "pattern": "Same cascade but opposite direction (dots → numbers)",
      "feels_different": "Reveal feels more satisfying than hide",
      "same_timing": "Uses same delays and springs"
    }
  },

  "mathematical_patterns": {
    "linear_delay_sequence": {
      "formula": "d(i) = i × 25ms",
      "sequence": "0, 25, 50, 75, 100, ..., 275ms",
      "type": "Arithmetic sequence",
      "common_difference": 25
    },
    "cubic_opacity_curve": {
      "formula": "opacity(p) = p³ for dots, (1-p)³ for numbers",
      "at_0%": "dots: 0, numbers: 1",
      "at_50%": "dots: 0.125, numbers: 0.125 (both dim)",
      "at_100%": "dots: 1, numbers: 0",
      "characteristic": "Slow start, rapid end (acceleration curve)"
    },
    "linear_interpolation": {
      "formula": "y = y₀ + (y₁ - y₀) × p",
      "dot_position": "-25 + (0 - (-25)) × p = -25 + 25p",
      "text_position": "0 + (25 - 0) × p = 25p",
      "result": "Linear slide motion"
    },
    "index_based_conditional": {
      "spacing_condition": "index ≠ 0 ∧ (index + 1) mod 4 = 0",
      "matches": "Indexes 3, 7, 11, 15",
      "creates": "Visual groups of 4 digits"
    }
  },

  "platform_considerations": {
    "ios": {
      "features": [
        "Native BlurView with animated intensity",
        "Smooth 60fps animations",
        "Full visual polish with blur effects"
      ],
      "performance": "Excellent",
      "visual_quality": "Premium banking app aesthetic"
    },
    "android": {
      "features": [
        "All animations work (slide, opacity, spring)",
        "No blur effects (BlurView conditionally skipped)"
      ],
      "performance": "Excellent",
      "visual_quality": "Clean but less polished than iOS",
      "limitation": "Missing blur during transitions"
    },
    "font_loading": {
      "requirement": "FiraCode-Regular must be loaded",
      "expo": "Use expo-font to load custom fonts",
      "fallback": "System font (may break alignment)"
    }
  },

  "security_considerations": {
    "pci_compliance_note": {
      "warning": "This is a UI demonstration only",
      "production": "Never store full card numbers in plain text",
      "recommendation": "Use tokenization and secure vaults",
      "display": "Only show last 4 digits from secure backend"
    },
    "privacy_best_practices": {
      "default_state": "Should default to hidden (toggled: true)",
      "auto_hide": "Consider auto-hiding after timeout",
      "screenshot_protection": "Consider preventing screenshots when visible",
      "biometric_gate": "Require biometric auth before reveal"
    },
    "data_handling": {
      "storage": "Never persist card numbers in local state",
      "logging": "Never log full card numbers",
      "analytics": "Never send card numbers to analytics",
      "clipboard": "If copying, clear clipboard after timeout"
    }
  },

  "bundle_size_impact": {
    "component_size": "Small (~300 lines total across 4 files)",
    "dependencies": [
      "react-native-reanimated (likely already in project)",
      "react-native-gesture-handler (likely already in project)",
      "expo-blur (small, ~20KB)",
      "@expo/vector-icons (likely already in project)"
    ],
    "runtime_overhead": "Minimal (16 digit components, lightweight)",
    "custom_fonts": "FiraCode-Regular (~70KB if not already included)",
    "estimated_impact": "< 5KB additional (excluding already-used dependencies)"
  },

  "real_world_inspiration": {
    "banking_apps": [
      "Apple Card in Wallet",
      "Chase Mobile",
      "Bank of America app",
      "Capital One",
      "Revolut card details"
    ],
    "payment_platforms": [
      "PayPal card management",
      "Stripe dashboard",
      "Square payment forms",
      "Venmo card display"
    ],
    "design_patterns": [
      "Progressive disclosure",
      "Privacy-first design",
      "Staggered animations for delight",
      "Banking industry standards (show last 4)"
    ]
  },

  "tags": [
    "credit-card",
    "privacy",
    "staggered-animation",
    "blur-effect",
    "toggle",
    "banking",
    "payment",
    "sensitive-data",
    "slide-animation",
    "reanimated",
    "spring-physics",
    "dual-layer",
    "cascade",
    "progressive-delay",
    "withDelay",
    "expo-blur",
    "gesture-handler",
    "security-ui"
  ]
}
