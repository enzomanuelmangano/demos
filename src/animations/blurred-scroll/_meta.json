{
  "animation_name": "Blurred Scroll",
  "animation_slug": "blurred-scroll",
  "description": "A performant scrollable list featuring dynamic blur effects and 3D transforms rendered via Skia. Items blur and rotate when scrolling away from the center viewport, with smooth scaling animations and gradient-filled rounded rectangles.",
  "main_features": [
    "Dynamic blur effects based on scroll position",
    "3D rotation transforms (rotateX)",
    "Scale animations on scroll",
    "Skia-rendered gradient cards",
    "GPU-accelerated rendering",
    "useAnimatedScrollHandler for native thread performance",
    "Inverted FlatList for bottom-to-top scrolling",
    "Centered viewport with padding",
    "LinearTransition layout animations",
    "FadeIn entrance animation"
  ],
  "file_structure": {
    "index.tsx": "Main BlurredScroll component with FlatList",
    "components/BlurredItem.tsx": "Individual list item with Skia rendering and blur effects"
  },
  "core_technologies": {
    "rendering": "@shopify/react-native-skia",
    "animations": "react-native-reanimated",
    "list": "Animated.FlatList"
  },
  "packages_and_versions": {
    "@shopify/react-native-skia": {
      "version": "2.2.12",
      "components": [
        "Canvas",
        "Group",
        "RoundedRect",
        "LinearGradient",
        "BlurMask"
      ],
      "utilities": [
        "interpolate",
        "Extrapolate",
        "vec"
      ],
      "usage": "GPU-accelerated rendering with blur effects and gradients"
    },
    "react-native-reanimated": {
      "version": "~4.1.1",
      "hooks": [
        "useSharedValue",
        "useAnimatedScrollHandler",
        "useDerivedValue",
        "useAnimatedStyle",
        "interpolate"
      ],
      "components": [
        "Animated.FlatList",
        "Animated.View"
      ],
      "layout_animations": [
        "FadeIn",
        "LinearTransition"
      ],
      "critical_feature": "useAnimatedScrollHandler runs scroll handling on UI thread"
    }
  },
  "animation_techniques": {
    "blur_interpolation": {
      "input_range": "[(i-1)*height, i*height, (i+1)*height, (i+2)*height]",
      "output_range": "[0.1, 0.1, 40, 0.1]",
      "effect": "Items blur heavily (40) when scrolling away from center",
      "optimization": "Minimal blur (0.1) at center and edges for performance",
      "component": "BlurMask",
      "style": "solid"
    },
    "3d_rotation": {
      "transform": "rotateX",
      "input_range": "[(i-1)*height, i*height, (i+1)*height, (i+2)*height]",
      "output_range": "[0, 0, Math.PI/20, 0] rad",
      "effect": "Items rotate slightly (~9°) as they scroll away",
      "max_rotation": "π/20 radians (≈9 degrees)"
    },
    "scale_animation": {
      "input_range": "[(i-1)*height, i*height, (i+1)*height, (i+2)*height]",
      "output_range": "[0.8, 1, 0.8, 1]",
      "effect": "Items scale down to 80% when away from center, 100% when centered",
      "applied_to": "Group transform in Skia"
    },
    "gradient_fill": {
      "component": "LinearGradient",
      "start": "{ x: 0, y: 0 }",
      "end": "{ x: width, y: height }",
      "colors": [
        "#9459F4",
        "#3411E4"
      ],
      "effect": "Purple-to-blue diagonal gradient on cards",
      "aesthetic": "Vibrant, modern gradient"
    },
    "layout_animations": {
      "entering": "FadeIn",
      "layout": "LinearTransition",
      "effect": "Smooth entrance and layout changes"
    }
  },
  "reanimated_patterns": {
    "useAnimatedScrollHandler": {
      "pattern": "Most efficient way to handle scroll in Reanimated",
      "runs_on": "UI thread (native)",
      "updates": "contentOffsetY SharedValue",
      "callback": "onScroll: event => { contentOffsetY.value = event.contentOffset.y }",
      "benefit": "No bridge crossing, 60fps scroll handling",
      "worklet": true
    },
    "shared_values": [
      {
        "name": "contentOffsetY",
        "type": "SharedValue<number>",
        "initial": 0,
        "updates": "On scroll via useAnimatedScrollHandler",
        "usage": "Passed to each BlurredItem for interpolation"
      }
    ],
    "derived_values": [
      {
        "name": "blur (in BlurredItem)",
        "dependencies": [
          "contentOffsetY",
          "inputRange"
        ],
        "calculation": "useDerivedValue(() => interpolate(contentOffsetY.value, inputRange, blurOutputRange, Extrapolate.CLAMP))",
        "purpose": "Dynamic blur based on scroll position"
      },
      {
        "name": "transformGroup (in BlurredItem)",
        "dependencies": [
          "contentOffsetY",
          "inputRange"
        ],
        "calculation": "useDerivedValue(() => [{ scale: interpolate(...) }])",
        "purpose": "Dynamic scale transformation"
      }
    ],
    "animated_style": {
      "name": "rContainerStyle",
      "properties": [
        "transform: [{ rotate }]"
      ],
      "interpolation": "rotateX interpolation in useAnimatedStyle",
      "dependencies": [
        "inputRange",
        "contentOffsetY"
      ]
    }
  },
  "skia_rendering": {
    "canvas": {
      "width": "windowWidth",
      "height": "blurredItemContainerHeight (45% of window height)",
      "purpose": "Full-width canvas for each list item"
    },
    "group_transform": {
      "component": "Group",
      "transform": "useDerivedValue with scale interpolation",
      "origin": "{ x: width/2, y: 0 }",
      "purpose": "Scales from top-center origin point",
      "dynamic": true
    },
    "rounded_rect": {
      "component": "RoundedRect",
      "x": "horizontalPadding / 2 (default 60)",
      "y": "verticalPadding / 2 (default 60)",
      "width": "width - horizontalPadding (default width - 120)",
      "height": "height - verticalPadding (default height - 120)",
      "r": 20,
      "effect": "Rounded corners with 20px radius"
    },
    "linear_gradient": {
      "component": "LinearGradient",
      "start": "{ x: 0, y: 0 } (top-left)",
      "end": "{ x: width, y: height } (bottom-right)",
      "colors": [
        "#9459F4 (purple)",
        "#3411E4 (blue)"
      ],
      "effect": "Diagonal gradient across card"
    },
    "blur_mask": {
      "component": "BlurMask",
      "blur": "useDerivedValue with interpolation",
      "dynamic": true,
      "range": "0.1 to 40",
      "effect": "Dynamic blur applied to entire Group"
    }
  },
  "mathematical_algorithms": {
    "input_range_calculation": {
      "formula": "[(index-1)*height, index*height, (index+1)*height, (index+2)*height]",
      "breakdown": {
        "(index-1)*height": "Previous item position",
        "index*height": "Current item position (centered)",
        "(index+1)*height": "Next item position (transition point)",
        "(index+2)*height": "Two items ahead"
      },
      "purpose": "Creates scroll-based interpolation zones for each item"
    },
    "blur_output_range": {
      "values": "[0.1, 0.1, 40, 0.1]",
      "at_previous": "0.1 (minimal blur)",
      "at_current": "0.1 (sharp, centered item)",
      "at_next": "40 (heavily blurred)",
      "at_plus_two": "0.1 (minimal blur)"
    },
    "rotation_angle": {
      "formula": "Math.PI / 20",
      "radians": "π/20 ≈ 0.157 rad",
      "degrees": "≈9°",
      "effect": "Subtle 3D rotation effect"
    },
    "scale_range": {
      "min": 0.8,
      "max": 1,
      "at_center": 1,
      "away_from_center": 0.8,
      "effect": "20% size reduction when not centered"
    },
    "item_height": {
      "formula": "windowHeight * 0.45",
      "percentage": "45% of viewport height",
      "responsive": true
    }
  },
  "flatlist_configuration": {
    "layout": {
      "component": "Animated.FlatList",
      "entering": "FadeIn",
      "layout_transition": "LinearTransition"
    },
    "scroll_handling": {
      "onScroll": "useAnimatedScrollHandler",
      "scrollEventThrottle": 16,
      "showsVerticalScrollIndicator": false
    },
    "contentContainerStyle": {
      "paddingTop": "windowHeight/2 - itemHeight/2",
      "paddingBottom": "windowHeight/2 - itemHeight/2",
      "purpose": "Centers first/last item in viewport"
    },
    "getItemLayout": {
      "callback": "(_, index) => ({ length: height, offset: height * index, index })",
      "optimization": "Enables FlatList to calculate positions without measuring",
      "benefit": "Better scroll performance and instant scrolling"
    },
    "data": {
      "generation": "new Array(10).fill(0).map((_, index) => index)",
      "count": 10,
      "items": "Array of indices [0, 1, 2, ..., 9]"
    }
  },
  "visual_design": {
    "color_scheme": {
      "background": "#000 (black)",
      "gradient_start": "#9459F4 (purple)",
      "gradient_end": "#3411E4 (blue)",
      "aesthetic": "Dark theme with vibrant purple-blue gradient"
    },
    "sizing": {
      "item_height": "45% of window height",
      "item_width": "100% of window width",
      "card_width": "width - 120px (60px padding each side)",
      "card_height": "height - 120px (60px padding top/bottom)",
      "border_radius": "20px"
    },
    "spacing": {
      "horizontal_padding": "120px (default, 60px each side)",
      "vertical_padding": "120px (default, 60px top/bottom)",
      "configurable": true
    },
    "depth_cues": [
      "Blur (defocus blur for depth)",
      "Scale (size perspective)",
      "Rotation (3D rotation for depth)",
      "Gradient (visual interest)"
    ]
  },
  "performance_optimizations": {
    "getItemLayout": {
      "purpose": "Pre-calculates item positions",
      "benefit": "Eliminates layout measurement, enables instant scrolling",
      "critical": true
    },
    "useAnimatedScrollHandler": {
      "benefit": "Scroll handling on UI thread, no bridge crossing",
      "fps": "60fps scroll performance"
    },
    "useDerivedValue": {
      "usage": [
        "blur calculation",
        "transform calculation"
      ],
      "benefit": "Recalculates only when dependencies change",
      "runs_on": "UI thread"
    },
    "skia_rendering": {
      "benefit": "GPU-accelerated rendering",
      "vs_components": "Single Canvas per item vs many View components",
      "performance": "Smooth 60fps even with blur effects"
    },
    "blur_range_optimization": {
      "strategy": "Minimal blur (0.1) when items at center",
      "reason": "Blur is expensive on GPU, minimize when most visible",
      "effect": "Better performance without sacrificing visual quality"
    },
    "extrapolate_clamp": {
      "usage": "All interpolations use Extrapolate.CLAMP",
      "benefit": "Prevents unexpected values outside input range",
      "performance": "Avoids unnecessary calculations"
    }
  },
  "component_props": {
    "BlurredItem": {
      "index": {
        "type": "number",
        "required": true,
        "description": "Item index for calculating input ranges"
      },
      "height": {
        "type": "number",
        "required": true,
        "description": "Item height (blurredItemContainerHeight)"
      },
      "width": {
        "type": "number",
        "required": true,
        "description": "Item width (windowWidth)"
      },
      "horizontalPadding": {
        "type": "number",
        "required": false,
        "default": 120,
        "description": "Total horizontal padding (60px each side)"
      },
      "verticalPadding": {
        "type": "number",
        "required": false,
        "default": 120,
        "description": "Total vertical padding (60px top/bottom)"
      },
      "contentOffsetY": {
        "type": "SharedValue<number>",
        "required": true,
        "description": "Shared value tracking scroll position"
      }
    }
  },
  "use_cases": {
    "primary": [
      "Image galleries with depth effect",
      "Card carousels",
      "Product showcases",
      "Vertical scrollers with focus effect",
      "Media browsers"
    ],
    "secondary": [
      "Content pickers with visual emphasis",
      "Story/post feeds with depth",
      "Timeline views",
      "Settings/option selectors",
      "Onboarding screens"
    ],
    "real_world_inspiration": [
      "Apple App Store cards",
      "Spotify playlist covers",
      "Instagram Stories selector",
      "Pinterest board grids"
    ]
  },
  "customization_options": {
    "padding": {
      "horizontal": "Configurable via horizontalPadding prop",
      "vertical": "Configurable via verticalPadding prop",
      "default": "120px each"
    },
    "gradient_colors": {
      "current": [
        "#9459F4",
        "#3411E4"
      ],
      "customizable": "Edit colors in BlurredItem component",
      "enhancement": "Could be exposed as props"
    },
    "blur_range": {
      "current": "[0.1, 0.1, 40, 0.1]",
      "customizable": "Edit blurOutputRange in BlurredItem",
      "adjustment": "Increase 40 for more blur, decrease for less"
    },
    "rotation_amount": {
      "current": "Math.PI / 20",
      "customizable": "Edit rotation output range",
      "effect": "Larger values = more dramatic 3D effect"
    },
    "scale_range": {
      "current": "[0.8, 1, 0.8, 1]",
      "customizable": "Edit scale output range",
      "effect": "Lower min value = smaller when not centered"
    },
    "item_height": {
      "current": "45% of window height",
      "customizable": "Edit multiplier in index.tsx",
      "affects": "Item spacing and visibility"
    },
    "border_radius": {
      "current": "20px",
      "customizable": "Edit 'r' prop on RoundedRect",
      "range": "0-50px typical"
    }
  },
  "code_quality": {
    "typescript": "Full TypeScript with explicit types",
    "type_definitions": [
      "BlurredItemProps"
    ],
    "imports": {
      "types": [
        "SharedValue"
      ],
      "explicit": true
    },
    "constants": {
      "inputRange": "Calculated per item based on index",
      "blurOutputRange": "Defined in component"
    },
    "worklet_annotations": {
      "scrollHandler": "useAnimatedScrollHandler is worklet",
      "derivedValues": "All useDerivedValue callbacks are worklets"
    },
    "naming_conventions": {
      "components": "PascalCase (BlurredItem, BlurredScroll)",
      "props": "camelCase",
      "shared_values": "camelCase (contentOffsetY)",
      "animated_styles": "rContainerStyle (r prefix for reanimated)"
    }
  },
  "known_limitations": {
    "fixed_item_count": {
      "issue": "Hardcoded to 10 items",
      "enhancement": "Could accept data array as prop",
      "workaround": "Edit array size in index.tsx"
    },
    "gradient_colors": {
      "issue": "Colors hardcoded in BlurredItem",
      "enhancement": "Could be exposed as props",
      "customization": "Requires editing component code"
    },
    "content_support": {
      "limitation": "Only renders gradient rectangles, no custom content",
      "enhancement": "Could support images, text, or custom components",
      "use_case": "Currently purely demonstrative"
    },
    "padding_defaults": {
      "issue": "Default padding (120px) may not scale well on all screens",
      "recommendation": "Use responsive values based on screen dimensions",
      "workaround": "Pass custom horizontalPadding/verticalPadding"
    },
    "blur_performance": {
      "platform": "Heavy blur may impact performance on low-end devices",
      "mitigation": "Already optimized with lower blur at center",
      "consideration": "Test on target devices"
    }
  },
  "potential_improvements": {
    "features": [
      "Support for custom content (images, text, components)",
      "Configurable gradient colors as props",
      "Dynamic item heights",
      "Horizontal scrolling variant",
      "Snap-to-center behavior",
      "Active item callbacks",
      "Pull-to-refresh support"
    ],
    "customization": [
      "Expose all animation parameters as props",
      "Theme support",
      "Border style options",
      "Shadow effects",
      "Opacity interpolation",
      "Custom interpolation curves"
    ],
    "performance": [
      "Reduce blur radius on low-end devices",
      "windowSize optimization for FlatList",
      "Memoize Skia components",
      "Device-specific configurations"
    ],
    "accessibility": [
      "Screen reader support",
      "Reduce motion support",
      "Focus indicators",
      "Keyboard navigation"
    ]
  },
  "key_insights": {
    "useAnimatedScrollHandler_critical": "Essential for 60fps scroll performance on UI thread",
    "blur_optimization": "Minimal blur at center saves GPU cycles while maintaining visual effect",
    "getItemLayout_performance": "Critical for smooth scrolling with consistent item sizes",
    "useDerivedValue_efficiency": "Recalculates blur/scale only when scroll position changes",
    "skia_blur_performance": "BlurMask applied to Group is more efficient than individual blurs",
    "group_transform_origin": "Transform origin at { x: width/2, y: 0 } creates natural scaling",
    "extrapolate_clamp": "Prevents interpolation values from exceeding intended ranges",
    "input_range_strategy": "Four-point input range creates smooth transition zones"
  },
  "learning_opportunities": {
    "for_beginners": [
      "FlatList basics",
      "Scroll event handling",
      "Basic Skia Canvas rendering",
      "Linear gradients",
      "Transform animations"
    ],
    "for_intermediate": [
      "useAnimatedScrollHandler for performance",
      "useDerivedValue for scroll-based animations",
      "Skia blur effects",
      "Interpolation with multiple breakpoints",
      "getItemLayout optimization",
      "Group transforms in Skia"
    ],
    "for_advanced": [
      "Performance optimization strategies",
      "Complex interpolation patterns",
      "GPU-accelerated rendering with Skia",
      "Blur effect optimization",
      "Coordinating multiple transform types",
      "Worklet-based scroll handling"
    ]
  },
  "comparison_to_similar_animations": {
    "vs_3d_scroll_transition": {
      "similarity": "Both use 3D rotation and scroll-based effects",
      "difference": "Blurred scroll emphasizes blur effects, 3D transition focuses on text masking",
      "blur_usage": "Blurred scroll uses more dramatic blur (0-40), 3D transition uses 0-6"
    },
    "vs_basic_carousel": {
      "similarity": "Vertical scrolling list",
      "difference": "Adds blur, scale, and rotation effects for depth perception",
      "complexity": "More GPU-intensive with Skia rendering"
    },
    "vs_parallax_scroll": {
      "similarity": "Scroll-based transformations",
      "difference": "Focuses on blur and scale rather than parallax positioning",
      "effect": "Creates focus/defocus effect vs depth layers"
    }
  },
  "performance_metrics": {
    "target_fps": 60,
    "runs_on": "UI thread",
    "expected_performance": "Smooth on mid-range and higher devices",
    "critical_optimizations": [
      "useAnimatedScrollHandler",
      "getItemLayout",
      "useDerivedValue",
      "Extrapolate.CLAMP",
      "Minimal blur at center"
    ],
    "device_considerations": "May need blur reduction on budget devices"
  },
  "accessibility_considerations": {
    "current_state": "No accessibility considerations implemented",
    "recommendations": [
      "Add accessibility labels to items",
      "Support keyboard navigation",
      "Announce current/focused item for screen readers",
      "Respect reduced motion preferences (disable blur/rotation)",
      "Ensure sufficient color contrast if text added",
      "Provide non-visual focus indicators"
    ],
    "reduced_motion": {
      "should_disable": [
        "Blur effects",
        "Rotation",
        "Scale animations"
      ],
      "should_keep": [
        "Basic scroll functionality"
      ],
      "implementation": "Check AccessibilityInfo.isReduceMotionEnabled"
    }
  },
  "testing_considerations": {
    "visual_tests": [
      "Verify blur effects apply correctly at different scroll positions",
      "Check rotation animation is smooth",
      "Confirm scale transitions work properly",
      "Test gradient renders consistently",
      "Verify centered item is sharp (minimal blur)",
      "Test on various screen sizes"
    ],
    "performance_tests": [
      "Monitor FPS during scrolling",
      "Check GPU usage with blur effects",
      "Test on low-end devices",
      "Verify no memory leaks",
      "Profile Skia rendering performance"
    ],
    "interaction_tests": [
      "Smooth scroll behavior",
      "Proper item positioning",
      "getItemLayout calculations correct",
      "contentOffsetY updates properly"
    ],
    "edge_cases": [
      "Scroll to beginning/end",
      "Rapid scrolling",
      "Very slow scrolling",
      "Different screen orientations",
      "Various device sizes"
    ]
  },
  "bundle_size_impact": {
    "code_size": "Small (~115 lines total)",
    "dependencies": "Skia and Reanimated (likely already in project)",
    "runtime_memory": "10 Canvas instances + SharedValues",
    "estimated_memory": "< 5MB (depends on screen size)",
    "optimization": "Could use windowSize for FlatList to reduce memory"
  },
  "tags": [
    "blur-effects",
    "scroll-animation",
    "skia",
    "reanimated",
    "flatlist",
    "3d-transforms",
    "scale-animation",
    "gradient",
    "gpu-accelerated",
    "performance",
    "depth-effect",
    "focus-effect",
    "carousel"
  ],
  "content_hash": "f518b532e1f72536426beaa26d3c9c826ace157076251ac3cef237105cdf87ce",
  "hash_algorithm": "sha256",
  "hash_generated_at": "2025-10-12T09:19:28.292Z",
  "last_validated": "2025-10-12T09:19:28.292Z"
}
