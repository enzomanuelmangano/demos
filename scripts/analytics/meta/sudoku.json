{
  "animation_slug": "sudoku",
  "extracted_at": "2025-10-31T18:25:46.602Z",
  "file_structure": {
    "entry": "logic/index.ts",
    "components": [
      "components/button.tsx",
      "components/number-pad.tsx",
      "components/sudoku-board/cell-container.tsx",
      "components/sudoku-board/cell.tsx",
      "components/sudoku-board/constants.ts",
      "theme.ts"
    ],
    "hooks": [],
    "utils": [],
    "types": [],
    "constants": [],
    "assets": [],
    "other": [
      "logic/sudoku-game.ts",
      "logic/sudoku.ts"
    ]
  },
  "packages": [
    "@expo/vector-icons",
    "expo-haptics",
    "expo-linear-gradient",
    "pressto",
    "react",
    "react-native",
    "react-native-fast-confetti",
    "react-native-reanimated"
  ],
  "packages_with_versions": {
    "@expo/vector-icons": "^15.0.3",
    "expo-haptics": "~15.0.7",
    "expo-linear-gradient": "~15.0.7",
    "pressto": "0.6.0",
    "react": "19.1.0",
    "react-native": "0.81.5",
    "react-native-fast-confetti": "^1.1.1",
    "react-native-reanimated": "~4.1.1"
  },
  "packages_detail": {
    "../../logic": {
      "imports": [
        "SudokuGame"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "../../theme": {
      "imports": [
        "COLORS"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "../number-pad": {
      "imports": [
        "NumberPad"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "../theme": {
      "imports": [
        "COLORS"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./cell": {
      "imports": [
        "Cell"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./cell-container": {
      "imports": [
        "CellContainer"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./components/button": {
      "imports": [
        "Button"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./components/sudoku-board": {
      "imports": [
        "SudokuBoard"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./constants": {
      "imports": [
        "BOARD_SIZE",
        "CELL_SIZE"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./logic": {
      "imports": [
        "generateSudoku"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./sudoku": {
      "imports": [
        "isPuzzleComplete",
        "isValidMove"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./theme": {
      "imports": [
        "COLORS",
        "ELEVATION"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "@expo/vector-icons": {
      "imports": [
        "Ionicons"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "expo-haptics": {
      "imports": [],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "expo-linear-gradient": {
      "imports": [
        "LinearGradient"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "pressto": {
      "imports": [
        "PressableScale"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react": {
      "imports": [
        "forwardRef",
        "memo",
        "useCallback",
        "useEffect",
        "useImperativeHandle",
        "useMemo",
        "useRef",
        "useState"
      ],
      "hooks": [
        "useCallback",
        "useEffect",
        "useImperativeHandle",
        "useMemo",
        "useRef",
        "useState"
      ],
      "functions": [],
      "components": []
    },
    "react-native": {
      "imports": [
        "Alert",
        "Dimensions",
        "Platform",
        "Pressable",
        "StyleSheet",
        "Text",
        "View"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-fast-confetti": {
      "imports": [
        "PIConfetti"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-reanimated": {
      "imports": [
        "FadeIn",
        "FadeInDown",
        "FadeOut",
        "LinearTransition",
        "useAnimatedStyle",
        "useDerivedValue",
        "useSharedValue",
        "withSpring",
        "withTiming"
      ],
      "hooks": [
        "useAnimatedStyle",
        "useDerivedValue",
        "useSharedValue"
      ],
      "functions": [
        "withSpring",
        "withTiming"
      ],
      "components": [
        "Animated.Text",
        "Animated.View",
        "Animated.createAnimatedComponent"
      ]
    }
  },
  "hooks": [
    "useAnimatedStyle",
    "useCallback",
    "useDerivedValue",
    "useEffect",
    "useImperativeHandle",
    "useMemo",
    "useRef",
    "useSharedValue",
    "useState"
  ],
  "functions": [
    "Array",
    "clearTimeout",
    "countSolutions",
    "fillBox",
    "findEmpty",
    "forceSolveWithConfetti",
    "forwardRef",
    "generateSudoku",
    "isCellValid",
    "isPuzzleComplete",
    "isValidMove",
    "memo",
    "onBackspace",
    "onCellPress",
    "onComplete",
    "onNumberPress",
    "onPress",
    "onSolved",
    "playCelebrationHaptics",
    "setBoard",
    "setHasStarted",
    "setIsNumberPadReady",
    "setIsReady",
    "setTimeout",
    "shuffle",
    "solveBoard",
    "solveSudoku",
    "withSpring",
    "withTiming"
  ],
  "components": [
    "Animated.Text",
    "Animated.View",
    "Animated.createAnimatedComponent",
    "AnimatedPressable",
    "Button",
    "Cell",
    "CellContainer",
    "Ionicons",
    "LinearGradient",
    "NumberPad",
    "NumberPadButton",
    "PIConfetti",
    "PressableScale",
    "SudokuBoard",
    "Text",
    "View"
  ],
  "patterns": [
    "shared-value-state",
    "animated-styling",
    "derived-computation",
    "timing-animation",
    "spring-animation",
    "reactive-styling-pattern",
    "imperative-animation-api"
  ],
  "techniques": [
    "timing-based-transitions",
    "spring-physics",
    "ref-based-control",
    "transform-animations"
  ],
  "stats": {
    "total_files": 11,
    "total_packages": 8,
    "total_hooks": 9,
    "total_functions": 29,
    "total_components": 16,
    "total_patterns": 7,
    "total_techniques": 4
  }
}
