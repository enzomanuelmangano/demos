{
  "animation_slug": "add-to-cart",
  "content_hash": "40dd009df1fda1a071d8ddc381901ede1d6062bbd17439ed7225945700f7f38f",
  "hash_algorithm": "sha256",
  "file_structure": {
    "entry": "index.tsx",
    "components": [
      "components/list-item/pressable-scale.tsx"
    ],
    "hooks": [],
    "utils": [],
    "types": [],
    "constants": [],
    "assets": [],
    "other": []
  },
  "packages": [
    "@expo/vector-icons",
    "expo-image",
    "pressto",
    "react",
    "react-native",
    "react-native-gesture-handler",
    "react-native-reanimated",
    "react-native-safe-area-context",
    "react-native-worklets"
  ],
  "packages_with_versions": {
    "@expo/vector-icons": "^15.0.3",
    "expo-image": "~3.0.10",
    "pressto": "0.6.0",
    "react": "19.1.0",
    "react-native": "0.81.5",
    "react-native-gesture-handler": "~2.28.0",
    "react-native-reanimated": "~4.1.1",
    "react-native-safe-area-context": "~5.6.0",
    "react-native-worklets": "0.5.1"
  },
  "packages_detail": {
    "@expo/vector-icons": {
      "imports": [
        "Feather"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "expo-image": {
      "imports": [
        "Image"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "pressto": {
      "imports": [
        "PressableScale"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react": {
      "imports": [
        "PropsWithChildren",
        "memo",
        "useCallback",
        "useMemo",
        "useState"
      ],
      "hooks": [
        "useCallback",
        "useMemo",
        "useState"
      ],
      "functions": [],
      "components": []
    },
    "react-native": {
      "imports": [
        "FlatList",
        "StyleProp",
        "StyleSheet",
        "Text",
        "View",
        "ViewStyle",
        "useWindowDimensions"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-gesture-handler": {
      "imports": [
        "Gesture",
        "GestureDetector"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-reanimated": {
      "imports": [
        "Extrapolation",
        "cancelAnimation",
        "interpolate",
        "measure",
        "useAnimatedProps",
        "useAnimatedRef",
        "useAnimatedStyle",
        "useDerivedValue",
        "useSharedValue",
        "withSpring",
        "withTiming"
      ],
      "hooks": [
        "useAnimatedProps",
        "useAnimatedRef",
        "useAnimatedStyle",
        "useDerivedValue",
        "useSharedValue"
      ],
      "functions": [
        "cancelAnimation",
        "interpolate",
        "withSpring",
        "withTiming"
      ],
      "components": [
        "Animated.Text",
        "Animated.View"
      ]
    },
    "react-native-safe-area-context": {
      "imports": [
        "useSafeAreaInsets"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-worklets": {
      "imports": [
        "scheduleOnRN"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    }
  },
  "hooks": [
    "useAnimatedProps",
    "useAnimatedRef",
    "useAnimatedStyle",
    "useCallback",
    "useDerivedValue",
    "useMemo",
    "useSafeAreaInsets",
    "useSharedValue",
    "useState",
    "useWindowDimensions"
  ],
  "functions": [
    "Boolean",
    "cancelAnimation",
    "interpolate",
    "measure",
    "memo",
    "onDismiss",
    "onPress",
    "scheduleOnRN",
    "setListItems",
    "withSpring",
    "withTiming"
  ],
  "components": [
    "Animated.Text",
    "Animated.View",
    "Backdrop",
    "BottomSheet",
    "ConfirmButton",
    "Feather",
    "FlatList",
    "GestureDetector",
    "Image",
    "ListItem",
    "PressableScale",
    "Text",
    "View"
  ],
  "patterns": [
    "shared-value-state",
    "animated-styling",
    "derived-computation",
    "timing-animation",
    "spring-animation",
    "value-interpolation",
    "reactive-styling-pattern"
  ],
  "techniques": [
    "timing-based-transitions",
    "spring-physics",
    "value-mapping",
    "transform-animations"
  ],
  "stats": {
    "total_files": 6,
    "total_packages": 9,
    "total_hooks": 10,
    "total_functions": 11,
    "total_components": 13,
    "total_patterns": 7,
    "total_techniques": 4
  }
}
