{
  "animation_slug": "prequel-slider",
  "extracted_at": "2025-10-31T18:25:46.054Z",
  "file_structure": {
    "entry": "src/index.tsx",
    "components": [
      "src/components/draggable-slider/constants.ts",
      "src/components/draggable-slider/utils/get-lines-path.ts",
      "src/components/draggable-slider/utils/snap-point.ts",
      "src/components/image-editor/utils/shader-lib.ts",
      "src/components/image-editor/utils/transition.ts"
    ],
    "hooks": [],
    "utils": [],
    "types": [],
    "constants": [],
    "assets": [],
    "other": []
  },
  "packages": [
    "@shopify/react-native-skia",
    "expo-haptics",
    "react",
    "react-native",
    "react-native-gesture-handler",
    "react-native-reanimated",
    "react-native-safe-area-context",
    "react-native-worklets"
  ],
  "packages_with_versions": {
    "@shopify/react-native-skia": "2.2.12",
    "expo-haptics": "~15.0.7",
    "react": "19.1.0",
    "react-native": "0.81.5",
    "react-native-gesture-handler": "~2.28.0",
    "react-native-reanimated": "~4.1.1",
    "react-native-safe-area-context": "~5.6.0",
    "react-native-worklets": "0.5.1"
  },
  "packages_detail": {
    "../components/image-editor/utils": {
      "imports": [
        "glsl"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "../constants": {
      "imports": [
        "ScreenWidth"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./boundary-gradient": {
      "imports": [
        "BoundaryGradient"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./components/donut-circular-progress": {
      "imports": [
        "DonutCircularProgress"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./components/draggable-slider": {
      "imports": [
        "DraggableSlider"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./components/image-editor": {
      "imports": [
        "ImageEditor"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./constants": {
      "imports": [
        "ScreenWidth"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./gl-transition": {
      "imports": [
        "ButterflyWaveScrawlerGL"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./shader-lib": {
      "imports": [
        "frag"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./src": {
      "imports": [
        "App"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./utils": {
      "imports": [
        "transition"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./utils/get-lines-path": {
      "imports": [
        "getLinesPath"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "./utils/snap-point": {
      "imports": [
        "snapPoint"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "@shopify/react-native-skia": {
      "imports": [
        "Canvas",
        "Fill",
        "Group",
        "ImageShader",
        "LinearGradient",
        "Path",
        "Rect",
        "Shader",
        "Skia",
        "rect",
        "rrect",
        "useImage"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "expo-haptics": {
      "imports": [],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react": {
      "imports": [
        "memo",
        "useMemo"
      ],
      "hooks": [
        "useMemo"
      ],
      "functions": [],
      "components": []
    },
    "react-native": {
      "imports": [
        "Dimensions",
        "StyleSheet",
        "View",
        "useWindowDimensions"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-gesture-handler": {
      "imports": [
        "Gesture",
        "GestureDetector",
        "GestureHandlerRootView"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-reanimated": {
      "imports": [
        "cancelAnimation",
        "clamp",
        "interpolate",
        "interpolateColor",
        "useAnimatedReaction",
        "useAnimatedStyle",
        "useDerivedValue",
        "useSharedValue",
        "withSpring"
      ],
      "hooks": [
        "useAnimatedReaction",
        "useAnimatedStyle",
        "useDerivedValue",
        "useSharedValue"
      ],
      "functions": [
        "cancelAnimation",
        "interpolate",
        "interpolateColor",
        "withSpring"
      ],
      "components": [
        "Animated.View"
      ]
    },
    "react-native-safe-area-context": {
      "imports": [
        "SafeAreaProvider",
        "useSafeAreaInsets"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    },
    "react-native-worklets": {
      "imports": [
        "scheduleOnRN"
      ],
      "hooks": [],
      "functions": [],
      "components": []
    }
  },
  "hooks": [
    "useAnimatedReaction",
    "useAnimatedStyle",
    "useDerivedValue",
    "useImage",
    "useMemo",
    "useSafeAreaInsets",
    "useSharedValue",
    "useWindowDimensions"
  ],
  "functions": [
    "cancelAnimation",
    "clamp",
    "getLinesPath",
    "glsl",
    "interpolate",
    "interpolateColor",
    "isBigLine",
    "memo",
    "onProgressChange",
    "rect",
    "rrect",
    "scheduleOnRN",
    "snapPoint",
    "transition",
    "withSpring"
  ],
  "components": [
    "Animated.View",
    "App",
    "BoundaryGradient",
    "Canvas",
    "DonutCircularProgress",
    "DraggableSlider",
    "Fill",
    "GestureDetector",
    "GestureHandlerRootView",
    "Group",
    "ImageEditor",
    "ImageShader",
    "LinearGradient",
    "Path",
    "Rect",
    "SafeAreaProvider",
    "Shader",
    "View"
  ],
  "patterns": [
    "shared-value-state",
    "animated-styling",
    "derived-computation",
    "animated-reaction",
    "spring-animation",
    "value-interpolation",
    "color-interpolation",
    "reactive-styling-pattern",
    "skia-graphics"
  ],
  "techniques": [
    "reactive-side-effects",
    "spring-physics",
    "value-mapping",
    "color-transitions",
    "canvas-rendering",
    "transform-animations"
  ],
  "stats": {
    "total_files": 13,
    "total_packages": 8,
    "total_hooks": 8,
    "total_functions": 15,
    "total_components": 18,
    "total_patterns": 9,
    "total_techniques": 6
  }
}
